{
  "spec": {
    "title": "CSS Functions and Mixins Module",
    "url": "https://drafts.csswg.org/css-mixins-1/"
  },
  "algorithms": [
    {
      "name": "substitute a dashed function",
      "href": "https://drafts.csswg.org/css-mixins-1/#substitute-a-dashed-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"substitute-a-dashed-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">substitute a dashed function</dfn> in a value,\n\t\twith <var>dashed function</var> being a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-mixins-1/#typedef-dashed-function\" id=\"ref-for-typedef-dashed-function⑨\">&lt;dashed-function&gt;</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>function</var> be the result of dereferencing\nthe <var>dashed function</var>’s name as a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#css-tree-scoped-reference\" id=\"ref-for-css-tree-scoped-reference\">tree-scoped reference</a>.\nIf no such name exists, return failure.</p>"
        },
        {
          "html": "<p>Let <var>dependency values</var> be an initially empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list\">list</a>.</p>"
        },
        {
          "html": "<p>For each <var>dependency</var> in <var>function</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#function-dependency\" id=\"ref-for-function-dependency④\">dependencies</a>:</p>\n      <ul>\n       <li data-md=\"\">\n        <p>Let <var>dependency value</var> be the value that would be substituted\nif a <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-variables-2/#funcdef-var\" id=\"ref-for-funcdef-var⑦\">var()</a> function had been specified explicitly\nat the end of <var>dashed function</var>’s argument list,\nwith <var>dependency</var> as its only argument.</p>\n       </li><li data-md=\"\">\n        <p>If that substitution would have made a containing declaration <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#invalid-at-computed-value-time\" id=\"ref-for-invalid-at-computed-value-time\">invalid at computed-value time</a>,\nset <var>dependency value</var> to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value\">guaranteed-invalid value</a>.</p>\n       </li><li data-md=\"\">\n        <p>Append the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolve-an-argument\" id=\"ref-for-resolve-an-argument\">resolving an argument</a> to <var>dependency values</var>,\nusing <var>dependency value</var> as value,\nand <var>dependency</var> as parameter.</p>\n      </li></ul>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#evaluate-a-custom-function\" id=\"ref-for-evaluate-a-custom-function②\">Evaluate a custom function</a>,\nusing <var>function</var>, <var>dashed function</var> and <var>dependency values</var>.</p>"
        },
        {
          "html": "<p>If failure was returned, return failure.</p>"
        },
        {
          "html": "<p>Otherwise,\nreplace the <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-mixins-1/#typedef-dashed-function\" id=\"ref-for-typedef-dashed-function①⓪\">&lt;dashed-function&gt;</a> with the <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#equivalent-token-sequence\" id=\"ref-for-equivalent-token-sequence\">equivalent token sequence</a> of the value resulting from the evaluation.</p>"
        }
      ]
    },
    {
      "name": "evaluate a custom function",
      "href": "https://drafts.csswg.org/css-mixins-1/#evaluate-a-custom-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"evaluate-a-custom-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">evaluate a custom function</dfn>,\n\twith <var>function</var> being a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#custom-function\" id=\"ref-for-custom-function⑨\">custom function</a>, <var>dashed function</var> being the <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-mixins-1/#typedef-dashed-function\" id=\"ref-for-typedef-dashed-function①②\">&lt;dashed-function&gt;</a> invoking that <var>function</var>,\n\tand <var>dependency values</var> being a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①\">list</a> of values.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the number of values in <var>dashed function</var>’s argument list\nis greater than the number of values in <var>function</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#function-parameter\" id=\"ref-for-function-parameter⑦\">parameters</a>,\nreturn failure.</p>"
        },
        {
          "html": "<p>For each value <var>parameter</var> in <var>function</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#function-parameter\" id=\"ref-for-function-parameter⑧\">parameters</a>,\nlet <var>argument</var> be the corresponding value in <var>dashed function</var>’s argument list\nat the same index:</p>\n      <ul>\n       <li data-md=\"\">\n        <p>If <var>argument</var> does not exist,\nset <var>argument</var> to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①\">guaranteed-invalid value</a>.</p>\n       </li><li data-md=\"\">\n        <p>Replace the value in <var>dashed function</var>’s argument list\nwith the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolve-an-argument\" id=\"ref-for-resolve-an-argument①\">resolving an argument</a>,\nusing <var>argument</var> as value,\nand <var>parameter</var> as parameter.</p>\n      </li></ul>"
        },
        {
          "html": "<p>Let <var>result</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolved-local-value\" id=\"ref-for-resolved-local-value①\">resolved local value</a> of the <a class=\"property\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-mixins-1/#descdef-function-result\" id=\"ref-for-descdef-function-result④\">result</a> descriptor,\nusing <var>function</var>, <var>dashed function</var>, and <var>dependency values</var>.</p>"
        },
        {
          "html": "<p>If <var>function</var> has a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#return-type\" id=\"ref-for-return-type①\">return type</a>,\nset <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolve-a-typed-value\" id=\"ref-for-resolve-a-typed-value\">resolving a typed value</a>,\nusing <var>result</var> as the value,\nand the <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#syntax-definition\" id=\"ref-for-syntax-definition②\">syntax definition</a> associated with the <span id=\"ref-for-return-type②\">return type</span> as the syntax.</p>"
        },
        {
          "html": "<p>If <var>result</var> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②\">guaranteed-invalid value</a>,\nreturn failure.</p>"
        },
        {
          "html": "<p>Otherwise,\nreturn <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "resolve an argument",
      "href": "https://drafts.csswg.org/css-mixins-1/#resolve-an-argument",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"resolve-an-argument\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">resolve an argument</dfn>,\n\twith value <var>value</var>,\n\tand <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#function-parameter\" id=\"ref-for-function-parameter⑨\">parameter</a> <var>parameter</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>value</var> is not the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value③\">guaranteed-invalid value</a>,\nand <var>parameter</var> has a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#parameter-type\" id=\"ref-for-parameter-type\">type</a>,\nset <var>value</var> to the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolve-a-typed-value\" id=\"ref-for-resolve-a-typed-value①\">resolving a typed value</a> using <var>value</var> as the value,\nand the <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#syntax-definition\" id=\"ref-for-syntax-definition③\">syntax definition</a> associated with <var>parameter</var>’s type as the syntax. </p>"
        },
        {
          "html": "If <var>value</var> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑤\">guaranteed-invalid value</a>,\nand <var>parameter</var> has a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#default-value\" id=\"ref-for-default-value\">default value</a>,\nset <var>value</var> to one of the following:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If parameter has a type",
                  "html": "<p>The result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolve-a-typed-value\" id=\"ref-for-resolve-a-typed-value②\">resolving a typed value</a> using the <var>parameter</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#default-value\" id=\"ref-for-default-value①\">default value</a> as the value,\nand the <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#syntax-definition\" id=\"ref-for-syntax-definition④\">syntax definition</a> associated with <var>parameter</var>’s type as the syntax.</p>"
                },
                {
                  "case": "Otherwise",
                  "html": "<p>The <var>parameter</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#default-value\" id=\"ref-for-default-value②\">default value</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>value</var>.</p>"
        }
      ]
    },
    {
      "name": "resolve a typed value",
      "href": "https://drafts.csswg.org/css-mixins-1/#resolve-a-typed-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"resolve-a-typed-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">resolve a typed value</dfn>,\n\twith value <var>value</var>,\n\tand <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#syntax-definition\" id=\"ref-for-syntax-definition⑤\">syntax definition</a> <var>syntax</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>value</var> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑥\">guaranteed-invalid value</a>,\nreturn <var>value</var>.</p>"
        },
        {
          "html": "<p><a href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#calculation-of-computed-values\">Compute</a> <var>value</var> as if it were the value associated with a <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#registered-custom-property\" id=\"ref-for-registered-custom-property\">registered custom property</a> whose <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-properties-values-api-1/#syntax-definition\" id=\"ref-for-syntax-definition⑥\">syntax definition</a> is <var>syntax</var>.</p>"
        },
        {
          "html": "<p>If this would lead to a declaration being <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#invalid-at-computed-value-time\" id=\"ref-for-invalid-at-computed-value-time②\">invalid at computed-value time</a>,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑦\">guaranteed-invalid value</a>.</p>"
        },
        {
          "html": "<p>Otherwise, return that value.</p>"
        }
      ]
    },
    {
      "name": "locally substitute a var()",
      "href": "https://drafts.csswg.org/css-mixins-1/#locally-substitute-a-var",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"locally-substitute-a-var\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">locally substitute a var()</dfn> within a value,\n\twith <var>function</var> being a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#custom-function\" id=\"ref-for-custom-function①②\">custom function</a>, <var>dashed function</var> being the <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-mixins-1/#typedef-dashed-function\" id=\"ref-for-typedef-dashed-function①③\">&lt;dashed-function&gt;</a> invoking that <var>function</var>,\n\tand <var>dependency values</var> being a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②\">list</a> of values:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>substitution value</var> be one of the following options,\ndepending on the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#custom-property\" id=\"ref-for-custom-property④\">custom property</a> named in the first argument of the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-variables-2/#funcdef-var\" id=\"ref-for-funcdef-var⑧\">var()</a> function:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If the custom property name matches a local variable within function",
                  "html": "<p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolved-local-value\" id=\"ref-for-resolved-local-value②\">resolved local value</a> of that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#local-variable\" id=\"ref-for-local-variable⑧\">local variable</a>.</p>"
                },
                {
                  "case": "Otherwise, if the custom property name matches a parameter within function",
                  "html": "<p>The corresponding argument value within the <var>dashed function</var>.</p>"
                },
                {
                  "case": "Otherwise, if the custom property name matches a dependency within function",
                  "html": "<p>The corresponding value of that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#function-dependency\" id=\"ref-for-function-dependency⑧\">dependency</a> within <var>dependency values</var>.</p>"
                },
                {
                  "case": "Otherwise",
                  "html": "<p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑧\">guaranteed-invalid value</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>If <var>substitution value</var> is not the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑨\">guaranteed-invalid value</a>,\nreplace the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-variables-2/#funcdef-var\" id=\"ref-for-funcdef-var⑨\">var()</a> function by that value.</p>"
        },
        {
          "html": "<p>Otherwise, if the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-variables-2/#funcdef-var\" id=\"ref-for-funcdef-var①⓪\">var()</a> function has a fallback value as its second argument,\nreplace the <span class=\"css\" id=\"ref-for-funcdef-var①①\">var()</span> function by the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-mixins-1/#resolved-local-value\" id=\"ref-for-resolved-local-value③\">locally resolved</a> fallback value.</p>"
        },
        {
          "html": "<p>Otherwise, return failure.</p>"
        }
      ]
    }
  ]
}