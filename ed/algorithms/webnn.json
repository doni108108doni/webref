{
  "spec": {
    "title": "Web Neural Network API",
    "url": "https://webmachinelearning.github.io/webnn/"
  },
  "algorithms": [
    {
      "name": "create a context",
      "href": "https://webmachinelearning.github.io/webnn/#create-a-context",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>context</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#mlcontext\" id=\"ref-for-mlcontext①①\">MLContext</a></code> object with <var>realm</var>.</p>"
        },
        {
          "html": "If <var>options</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://gpuweb.github.io/gpuweb/#gpudevice\" id=\"ref-for-gpudevice⑥\">GPUDevice</a></code> object:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-contexttype-slot\" id=\"ref-for-dom-mlcontext-contexttype-slot\">[[contextType]]</a></code> to \"<a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#context-type-webgpu\" id=\"ref-for-context-type-webgpu\">webgpu</a>\".</p>"
            },
            {
              "html": "<p>Set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-devicetype-slot\" id=\"ref-for-dom-mlcontext-devicetype-slot\">[[deviceType]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mldevicetype-gpu\" id=\"ref-for-dom-mldevicetype-gpu②\">\"gpu\"</a></code>.</p>"
            },
            {
              "html": "<p>Set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-powerpreference-slot\" id=\"ref-for-dom-mlcontext-powerpreference-slot\">[[powerPreference]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpowerpreference-default\" id=\"ref-for-dom-mlpowerpreference-default①\">\"default\"</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-contexttype-slot\" id=\"ref-for-dom-mlcontext-contexttype-slot①\">[[contextType]]</a></code> to \"<a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#context-type-default\" id=\"ref-for-context-type-default\">default</a>\".</p>"
            },
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontextoptions-devicetype\" id=\"ref-for-dom-mlcontextoptions-devicetype①\">deviceType</a></code>\"] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists\">exists</a>, then set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-devicetype-slot\" id=\"ref-for-dom-mlcontext-devicetype-slot①\">[[deviceType]]</a></code> to <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontextoptions-devicetype\" id=\"ref-for-dom-mlcontextoptions-devicetype②\">deviceType</a></code>\"]. Otherwise, set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-devicetype-slot\" id=\"ref-for-dom-mlcontext-devicetype-slot②\">[[deviceType]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mldevicetype-cpu\" id=\"ref-for-dom-mldevicetype-cpu②\">\"cpu\"</a></code>.</p>"
            },
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontextoptions-powerpreference\" id=\"ref-for-dom-mlcontextoptions-powerpreference①\">powerPreference</a></code>\"] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">exists</a>, then set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-powerpreference-slot\" id=\"ref-for-dom-mlcontext-powerpreference-slot①\">[[powerPreference]]</a></code> to <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontextoptions-powerpreference\" id=\"ref-for-dom-mlcontextoptions-powerpreference②\">powerPreference</a></code>\"]. Otherwise, set <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-powerpreference-slot\" id=\"ref-for-dom-mlcontext-powerpreference-slot②\">[[powerPreference]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpowerpreference-default\" id=\"ref-for-dom-mlpowerpreference-default②\">\"default\"</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If the user agent cannot support <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-contexttype-slot\" id=\"ref-for-dom-mlcontext-contexttype-slot②\">[[contextType]]</a></code>, <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-devicetype-slot\" id=\"ref-for-dom-mlcontext-devicetype-slot③\">[[deviceType]]</a></code> and <var>context</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-powerpreference-slot\" id=\"ref-for-dom-mlcontext-powerpreference-slot③\">[[powerPreference]]</a></code>, return failure.</p>"
        },
        {
          "html": "<p>Return <var>context</var>.</p>"
        }
      ]
    },
    {
      "name": "ML/createContext(options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-ml-createcontext",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>global</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global\">relevant global object</a>.</p>"
        },
        {
          "html": "<p>If <var>global</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/iframe-embed-object.html#allowed-to-use\" id=\"ref-for-allowed-to-use\">allowed to use</a> the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#webnn-feature\" id=\"ref-for-webnn-feature\">webnn</a> feature, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject\">rejected</a> with a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror\">SecurityError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>realm</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-realm\" id=\"ref-for-concept-relevant-realm\">relevant realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①\">a new promise</a>.</p>"
        },
        {
          "html": "Run the following steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel\">in parallel</a>.",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>context</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-a-context\" id=\"ref-for-create-a-context\">creating a context</a> given <var>realm</var> and <var>options</var>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task\">queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①\">reject</a> <var>promise</var> with a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②\">DOMException</a></code> and abort these steps.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task①\">Queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#resolve\" id=\"ref-for-resolve\">resolve</a> <var>promise</var> with <var>context</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "ML/createContext(gpuDevice)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-ml-createcontext-gpudevice",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>global</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global①\">relevant global object</a>.</p>"
        },
        {
          "html": "<p>If <var>global</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window①\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/iframe-embed-object.html#allowed-to-use\" id=\"ref-for-allowed-to-use①\">allowed to use</a> the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#webnn-feature\" id=\"ref-for-webnn-feature①\">webnn</a> feature, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise②\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject②\">rejected</a> with a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror①\">SecurityError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>realm</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-realm\" id=\"ref-for-concept-relevant-realm①\">relevant realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise③\">a new promise</a>.</p>"
        },
        {
          "html": "Run the following steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel①\">in parallel</a>.",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>context</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-a-context\" id=\"ref-for-create-a-context①\">creating a context</a> given <var>realm</var> and <var>gpuDevice</var>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task②\">queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject③\">reject</a> <var>promise</var> with a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④\">DOMException</a></code> and abort these steps.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task③\">Queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#resolve\" id=\"ref-for-resolve①\">resolve</a> <var>promise</var> with <var>context</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "validate buffer with descriptor",
      "href": "https://webmachinelearning.github.io/webnn/#validate-buffer-with-descriptor",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>bufferView</var>’s <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors\">element type</a> does not match to <var>descriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-datatype\" id=\"ref-for-dom-mloperanddescriptor-datatype\">dataType</a></code> according to <a href=\"https://webmachinelearning.github.io/webnn/#appendices-mloperanddatatype-arraybufferview-compatibility\">this table</a>, return false.</p>"
        },
        {
          "html": "<p>If <var>bufferView</var>.[[ByteLength]] is not equal to <var>descriptor</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperanddescriptor-byte-length\" id=\"ref-for-mloperanddescriptor-byte-length\">byte length</a>, return false.</p>"
        }
      ]
    },
    {
      "name": "execute graph",
      "href": "https://webmachinelearning.github.io/webnn/#execute-graph",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>inputResources</var> be the input resources of <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-implementation-slot\" id=\"ref-for-dom-mlgraph-implementation-slot\">[[implementation]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate\">For each</a> <var>name</var> → <var>inputValue</var> of <var>inputs</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>inputDescriptor</var> be <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-inputdescriptors-slot\" id=\"ref-for-dom-mlgraph-inputdescriptors-slot\">[[inputDescriptors]]</a></code>[<var>name</var>].</p>"
            },
            {
              "html": "Let <var>inputTensor</var> be a new tensor for <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-implementation-slot\" id=\"ref-for-dom-mlgraph-implementation-slot①\">[[implementation]]</a></code> as follows:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set the data type of <var>inputTensor</var> to the one that matches <var>inputValue</var>’s <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors①\">element type</a>.</p>"
                },
                {
                  "html": "<p>Set the shape of <var>inputTensor</var> to <var>inputDescriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape\">shape</a></code>.</p>"
                },
                {
                  "html": "<p>Set the values of elements in <var>inputTensor</var> to the values of elements in <var>inputValue</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Request the underlying implementation of <var>graph</var> to bind <var>inputResources</var>[<var>name</var>] to <var>inputTensor</var>.</p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate①\">For each</a> <var>name</var> → <var>outputValue</var> of <var>outputs</var>:",
          "rationale": "issue",
          "steps": [
            {
              "html": "Issue a compute request to <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-implementation-slot\" id=\"ref-for-dom-mlgraph-implementation-slot②\">[[implementation]]</a></code> given <var>name</var> and <var>inputResources</var> and wait for completion.",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If that returns an error, then return an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#operationerror\" id=\"ref-for-operationerror①\">OperationError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤\">DOMException</a></code>.</p>"
                },
                {
                  "html": "<p>Otherwise, let <var>outputTensor</var> be the result.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>outputDesc</var> be <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-outputdescriptors-slot\" id=\"ref-for-dom-mlgraph-outputdescriptors-slot\">[[outputDescriptors]]</a></code>[<var>name</var>].</p>"
            },
            {
              "html": "<p>If the byte length of <var>outputTensor</var> is not equal to <var>outputDesc</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperanddescriptor-byte-length\" id=\"ref-for-mloperanddescriptor-byte-length①\">byte length</a>, then return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>outputTensor</var>’s <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors②\">element type</a> doesn’t match <var>outputValue</var>’s <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors③\">element type</a>, then return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Request the underlying implementation of <var>graph</var> to set the values of elements in <var>outputValue</var> to the values of elements in <var>outputTensor</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined①\">undefined</a></code>.</p>"
        }
      ]
    },
    {
      "name": "MLNamedArrayBufferViews/transfer",
      "href": "https://webmachinelearning.github.io/webnn/#mlnamedarraybufferviews-transfer",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate②\">For each</a> <var>name</var> → <var>view</var> of <var>views</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>view</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-transferable\" id=\"ref-for-buffersource-transferable\">transferable</a>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>transferredViews</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#typedefdef-mlnamedarraybufferviews\" id=\"ref-for-typedefdef-mlnamedarraybufferviews①②\">MLNamedArrayBufferViews</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate③\">For each</a> <var>name</var> → <var>view</var> of <var>views</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>transferredBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#arraybuffer-transfer\" id=\"ref-for-arraybuffer-transfer\">transferring</a> <var>view</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-underlying-buffer\" id=\"ref-for-buffersource-underlying-buffer\">underlying buffer</a>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert\">Assert</a>: The above step never throws an exception.</p>"
            },
            {
              "html": "<p>Let <var>constructor</var> be the appropriate <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors④\">view constructor</a> for the type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#ArrayBufferView\" id=\"ref-for-ArrayBufferView⑦\">ArrayBufferView</a></code> <var>view</var> from <var>realm</var>.</p>"
            },
            {
              "html": "<p>Let <var>elementsNumber</var> be the result of <var>view</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-byte-length\" id=\"ref-for-buffersource-byte-length\">byte length</a> / <var>view</var>’s <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors⑤\">element size</a>.</p>"
            },
            {
              "html": "<p>Let <var>transferredView</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-construct\" id=\"ref-for-sec-construct\">Construct</a>(<var>constructor</var>, <var>transferredBuffer</var>, <var>view</var>.[[ByteOffset]], <var>elementsNumber</var>).</p>"
            },
            {
              "html": "<p>Set <var>transferredViews</var>[<var>name</var>] to <var>transferredView</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>transferredViews</var>.</p>"
        }
      ]
    },
    {
      "name": "MLContext/compute(graph, inputs, outputs)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlcontext-compute",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>global</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global②\">relevant global object</a>.</p>"
        },
        {
          "html": "<p>Let <var>realm</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-realm\" id=\"ref-for-concept-relevant-realm②\">relevant realm</a>.</p>"
        },
        {
          "html": "<p>If <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-context-slot\" id=\"ref-for-dom-mlgraph-context-slot\">[[context]]</a></code> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥\">this</a>, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise④\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject④\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-context-slot\" id=\"ref-for-dom-mlgraph-context-slot①\">[[context]]</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcontext-contexttype-slot\" id=\"ref-for-dom-mlcontext-contexttype-slot④\">[[contextType]]</a></code> is not \"<a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#context-type-default\" id=\"ref-for-context-type-default②\">default</a>\", then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise⑤\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject⑤\">rejected</a> with an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#operationerror\" id=\"ref-for-operationerror③\">OperationError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate④\">For each</a> <var>name</var> → <var>descriptor</var> of <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-inputdescriptors-slot\" id=\"ref-for-dom-mlgraph-inputdescriptors-slot①\">[[inputDescriptors]]</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>inputs</var>[<var>name</var>] does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②\">exist</a>, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise⑥\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject⑥\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#validate-buffer-with-descriptor\" id=\"ref-for-validate-buffer-with-descriptor\">validating buffer with descriptor</a> given <var>inputs</var>[<var>name</var>] and <var>descriptor</var> returns false, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise⑦\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject⑦\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate⑤\">For each</a> <var>name</var> → <var>resource</var> of <var>outputs</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-outputdescriptors-slot\" id=\"ref-for-dom-mlgraph-outputdescriptors-slot①\">[[outputDescriptors]]</a></code>[<var>name</var>] does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">exist</a>, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise⑧\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject⑧\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#validate-buffer-with-descriptor\" id=\"ref-for-validate-buffer-with-descriptor①\">validating buffer with descriptor</a> given <var>resource</var> and <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-outputdescriptors-slot\" id=\"ref-for-dom-mlgraph-outputdescriptors-slot②\">[[outputDescriptors]]</a></code>[<var>name</var>] returns false, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise⑨\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject⑨\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>transferredInputs</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlnamedarraybufferviews-transfer\" id=\"ref-for-mlnamedarraybufferviews-transfer③\">transferring</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#typedefdef-mlnamedarraybufferviews\" id=\"ref-for-typedefdef-mlnamedarraybufferviews①⑥\">MLNamedArrayBufferViews</a></code> <var>inputs</var> with <var>realm</var>. If that threw an exception, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①⓪\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①⓪\">rejected</a> with that exception.</p>"
        },
        {
          "html": "<p>Let <var>transferredOutputs</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlnamedarraybufferviews-transfer\" id=\"ref-for-mlnamedarraybufferviews-transfer④\">transferring</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#typedefdef-mlnamedarraybufferviews\" id=\"ref-for-typedefdef-mlnamedarraybufferviews①⑦\">MLNamedArrayBufferViews</a></code> <var>outputs</var> with <var>realm</var>. If that threw an exception, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①①\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①①\">rejected</a> with that exception.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①②\">a new promise</a>.</p>"
        },
        {
          "html": "Run the following steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel②\">in parallel</a>:",
          "rationale": "invoke",
          "steps": [
            {
              "html": "<p>Invoke <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#execute-graph\" id=\"ref-for-execute-graph\">execute graph</a> given <var>graph</var>, <var>transferredInputs</var> and <var>transferredOutputs</var>. If that returns an error, then <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task④\">queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①②\">reject</a> <var>promise</var> with an equivalent error in <var>realm</var> and abort these steps.</p>"
            },
            {
              "html": "<p>Let <var>result</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dictdef-mlcomputeresult\" id=\"ref-for-dictdef-mlcomputeresult②\">MLComputeResult</a></code> with <var>realm</var>.</p>"
            },
            {
              "html": "<p>Set <var>result</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcomputeresult-inputs\" id=\"ref-for-dom-mlcomputeresult-inputs①\">inputs</a></code> to <var>transferredInputs</var>.</p>"
            },
            {
              "html": "<p>Set <var>result</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlcomputeresult-outputs\" id=\"ref-for-dom-mlcomputeresult-outputs①\">outputs</a></code> to <var>transferredOutputs</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task⑤\">Queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#resolve\" id=\"ref-for-resolve②\">resolve</a> <var>promise</var> with <var>result</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "create an MLOperandDescriptor",
      "href": "https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>descriptor</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dictdef-mloperanddescriptor\" id=\"ref-for-dictdef-mloperanddescriptor⑨\">MLOperandDescriptor</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>descriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-datatype\" id=\"ref-for-dom-mloperanddescriptor-datatype②\">dataType</a></code> to <var>dataType</var>.</p>"
        },
        {
          "html": "<p>Set <var>descriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape②\">shape</a></code> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone\">clone</a> of <var>shape</var>.</p>"
        },
        {
          "html": "<p>Return <var>descriptor</var>.</p>"
        }
      ]
    },
    {
      "name": "MLOperandDescriptor/byte length",
      "href": "https://webmachinelearning.github.io/webnn/#mloperanddescriptor-byte-length",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>elementLength</var> be 1.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate\">For each</a> <var>dimension</var> of <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape③\">shape</a></code>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>elementLength</var> to <var>elementLength</var> * <var>dimension</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>elementSize</var> be the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors⑥\">element size</a> of one of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#ArrayBufferView\" id=\"ref-for-ArrayBufferView⑧\">ArrayBufferView</a></code> types that matches <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-datatype\" id=\"ref-for-dom-mloperanddescriptor-datatype③\">dataType</a></code> according to <a href=\"https://webmachinelearning.github.io/webnn/#appendices-mloperanddatatype-arraybufferview-compatibility\">this table</a>.</p>"
        },
        {
          "html": "<p>Return <var>elementLength</var> * <var>elementSize</var>.</p>"
        }
      ]
    },
    {
      "name": "MLOperandDescriptor/check dimensions",
      "href": "https://webmachinelearning.github.io/webnn/#mloperanddescriptor-check-dimensions",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If any element of <var>descriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape④\">shape</a></code> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension\">valid dimension</a>, return false.</p>"
        },
        {
          "html": "<p>If <var>descriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape⑤\">shape</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size\">size</a> is too large to be supported by the implementation, return false.</p>"
        },
        {
          "html": "<p>If <var>descriptor</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperanddescriptor-byte-length\" id=\"ref-for-mloperanddescriptor-byte-length②\">byte length</a> is not supported by the implementation, then return false.</p>"
        },
        {
          "html": "<p>Return true.</p>"
        }
      ]
    },
    {
      "name": "create an MLOperand",
      "href": "https://webmachinelearning.github.io/webnn/#create-an-mloperand",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>operand</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#mloperand\" id=\"ref-for-mloperand③④\">MLOperand</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-builder-slot\" id=\"ref-for-dom-mloperand-builder-slot①\">[[builder]]</a></code> to <var>builder</var>.</p>"
        },
        {
          "html": "<p>Set <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot②\">[[descriptor]]</a></code> to <var>desc</var>.</p>"
        },
        {
          "html": "<p>Return <var>operand</var>.</p>"
        }
      ]
    },
    {
      "name": "copy an MLOperand",
      "href": "https://webmachinelearning.github.io/webnn/#copy-an-mloperand",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#mloperand\" id=\"ref-for-mloperand③⑥\">MLOperand</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>result</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-builder-slot\" id=\"ref-for-dom-mloperand-builder-slot②\">[[builder]]</a></code> to <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-builder-slot\" id=\"ref-for-dom-mloperand-builder-slot③\">[[builder]]</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>result</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot③\">[[descriptor]]</a></code> to <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot④\">[[descriptor]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-name-slot\" id=\"ref-for-dom-mloperand-name-slot\">[[name]]</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④\">exists</a>, then set <var>result</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-name-slot\" id=\"ref-for-dom-mloperand-name-slot①\">[[name]]</a></code> to <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-name-slot\" id=\"ref-for-dom-mloperand-name-slot②\">[[name]]</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/MLGraphBuilder(context)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-mlgraphbuilder",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global③\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window②\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/iframe-embed-object.html#allowed-to-use\" id=\"ref-for-allowed-to-use②\">allowed to use</a> the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#webnn-feature\" id=\"ref-for-webnn-feature②\">webnn</a> feature, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①\">throw</a> a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror②\">SecurityError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-context-slot\" id=\"ref-for-dom-mlgraphbuilder-context-slot\">[[context]]</a></code> to <var>context</var>.</p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot\">[[hasBuilt]]</a></code> to false.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/input(name, descriptor)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-input",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>name</var> is empty, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#mloperand\" id=\"ref-for-mloperand④⑥\">MLOperand</a></code>s in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph\">graph</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-input\" id=\"ref-for-computational-graph-input\">inputs</a> have a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-name-slot\" id=\"ref-for-dom-mloperand-name-slot③\">[[name]]</a></code> equal to <var>name</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperanddescriptor-check-dimensions\" id=\"ref-for-mloperanddescriptor-check-dimensions\">checking dimensions</a> given <var>descriptor</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operand</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Set <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-name-slot\" id=\"ref-for-dom-mloperand-name-slot④\">[[name]]</a></code> to <var>name</var>.</p>"
            },
            {
              "html": "<p>Add <var>operand</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph①\">graph</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-input\" id=\"ref-for-computational-graph-input①\">inputs</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>operand</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/constant(descriptor, bufferView)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-constant",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑥\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperanddescriptor-check-dimensions\" id=\"ref-for-mloperanddescriptor-check-dimensions①\">checking dimensions</a> given <var>descriptor</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#validate-buffer-with-descriptor\" id=\"ref-for-validate-buffer-with-descriptor②\">validating buffer with descriptor</a> given <var>bufferView</var> and <var>descriptor</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operand</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑦\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Let <var>bytes</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-get-buffer-source-copy\" id=\"ref-for-dfn-get-buffer-source-copy\">getting a copy of the bytes held by the buffer source</a> given <var>bufferView</var>.</p>"
            },
            {
              "html": "<p>Add <var>operand</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph②\">graph</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-constants\" id=\"ref-for-computational-graph-constants\">constants</a> with <var>bytes</var> as value.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>operand</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/constant(type, value)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-constant-type-value",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>value</var> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①\">casting</a> <var>value</var> to <var>type</var>.</p>"
        },
        {
          "html": "<p>Let <var>descriptor</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor\">creating an MLOperandDescriptor</a> given <var>type</var> and « ».</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operand</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Add <var>operand</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph③\">graph</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-constants\" id=\"ref-for-computational-graph-constants①\">constants</a> with <var>value</var> as value.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>operand</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/build(outputs)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-build",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②②\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④\">[[hasBuilt]]</a></code> is true, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①③\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①③\">rejected</a> with an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>outputs</var> is empty, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①④\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①④\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate⑥\">For each</a> <var>name</var> → <var>operand</var> of <var>outputs</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>name</var> is empty, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①⑤\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①⑤\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand\">validating operand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②③\">this</a> and <var>operand</var> returns false, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①⑥\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①⑥\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>operand</var> is in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②④\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph④\">graph</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-input\" id=\"ref-for-computational-graph-input②\">inputs</a> or <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-constants\" id=\"ref-for-computational-graph-constants②\">constants</a>, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①⑦\">a new promise</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①⑦\">rejected</a> with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>operands</var> be a new empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set\">set</a>.</p>"
        },
        {
          "html": "<p>Let <var>operators</var> be a new empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①\">set</a>.</p>"
        },
        {
          "html": "<p>Let <var>inputs</var> be a new empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set②\">set</a>.</p>"
        },
        {
          "html": "<p>Let <var>queue</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue\">queue</a> containing <var>outputs</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-getting-the-values\" id=\"ref-for-map-getting-the-values\">values</a>.</p>"
        },
        {
          "html": "While <var>queue</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty\">is not empty</a>:",
          "rationale": "dequeue",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue-dequeue\" id=\"ref-for-queue-dequeue\">Dequeue</a> <var>operand</var> from <var>queue</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append\">Append</a> <var>operand</var> to <var>operands</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①\">Append</a> <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot\">[[operator]]</a></code> to <var>operators</var>.</p>"
            },
            {
              "html": "<p>If <var>operand</var> is in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph⑤\">graph</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#computational-graph-input\" id=\"ref-for-computational-graph-input③\">inputs</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append②\">append</a> <var>operand</var> to <var>inputs</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①\">For each</a> <var>input</var> of <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①\">[[operator]]</a></code>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①\">inputs</a>:",
              "rationale": "enqueue",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue-enqueue\" id=\"ref-for-queue-enqueue\">Enqueue</a> <var>input</var> to <var>queue</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>global</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global④\">relevant global object</a>.</p>"
        },
        {
          "html": "<p>Let <var>realm</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-realm\" id=\"ref-for-concept-relevant-realm③\">relevant realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>graph</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#mlgraph\" id=\"ref-for-mlgraph②⑥\">MLGraph</a></code> with <var>realm</var>.</p>"
        },
        {
          "html": "<p>Set <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-context-slot\" id=\"ref-for-dom-mlgraph-context-slot②\">[[context]]</a></code> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-context-slot\" id=\"ref-for-dom-mlgraphbuilder-context-slot①\">[[context]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②\">For each</a> <var>operand</var> in <var>inputs</var>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-inputdescriptors-slot\" id=\"ref-for-dom-mlgraph-inputdescriptors-slot②\">[[inputDescriptors]]</a></code>[<var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-name-slot\" id=\"ref-for-dom-mloperand-name-slot⑤\">[[name]]</a></code>] to <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot⑤\">[[descriptor]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate⑦\">For each</a> <var>name</var> → <var>operand</var> of <var>outputs</var>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-outputdescriptors-slot\" id=\"ref-for-dom-mlgraph-outputdescriptors-slot③\">[[outputDescriptors]]</a></code>[<var>name</var>] to <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot⑥\">[[descriptor]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>promise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①⑧\">a new promise</a>.</p>"
        },
        {
          "html": "Run the following steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel③\">in parallel</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>graphImpl</var> be the result of converting <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑨\">this</a>'s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-graph\" id=\"ref-for-mlgraphbuilder-graph⑦\">graph</a> with <var>operands</var>, <var>operators</var>, <var>inputs</var>, and <var>outputs</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-getting-the-values\" id=\"ref-for-map-getting-the-values①\">values</a> into an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#implementation-defined\" id=\"ref-for-implementation-defined①\">implementation-defined</a> format which can be interpreted by the underlying platform.",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If the underlying platform does not support a requested feature, then <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task⑥\">queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject①⑧\">reject</a> <var>promise</var> with an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#operationerror\" id=\"ref-for-operationerror④\">OperationError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①③\">DOMException</a></code>, and abort these steps.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>graph</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraph-implementation-slot\" id=\"ref-for-dom-mlgraph-implementation-slot③\">[[implementation]]</a></code> to <var>graphImpl</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#queue-an-ml-task\" id=\"ref-for-queue-an-ml-task⑦\">Queue an ML task</a> with <var>global</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#resolve\" id=\"ref-for-resolve③\">resolve</a> <var>promise</var> with <var>graph</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot⑤\">[[hasBuilt]]</a></code> to true.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/argminmax-op",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-argminmax-op",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert①\">Assert</a>: <var>op</var> is one of \"argMin\", \"argMax\".</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot⑥\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②\">shape</a>[<var>axis</var>] is greater than <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlargminmaxoptions-outputdatatype\" id=\"ref-for-dom-mlargminmaxoptions-outputdatatype②\">outputDataType</a></code>'s maximum value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-reduction-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-reduction-output-sizes\">calculating reduction output sizes</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③\">shape</a>, « <var>axis</var> », and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlargminmaxoptions-keepdimensions\" id=\"ref-for-dom-mlargminmaxoptions-keepdimensions①\">keepDimensions</a></code>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①\">creating an MLOperandDescriptor</a> given <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlargminmaxoptions-outputdatatype\" id=\"ref-for-dom-mlargminmaxoptions-outputdatatype③\">outputDataType</a></code> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①③\">operator</a> for the <var>op</var> operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand③\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③③\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/argMin(input, axis, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-argmin",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"argMin(input, axis, options)|argMin(input, axis)\" id=\"dom-mlgraphbuilder-argmin\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>argMin(<var>input</var>, <var>axis</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-argminmax-op\" id=\"ref-for-mlgraphbuilder-argminmax-op\"> create argMin/argMax operation</a> given \"argMin\", <var>input</var>, <var>axis</var> and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/argMax(input, axis, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-argmax",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"argMax(input, axis, options)|argMax(input, axis)\" id=\"dom-mlgraphbuilder-argmax\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>argMax(<var>input</var>, <var>axis</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-argminmax-op\" id=\"ref-for-mlgraphbuilder-argminmax-op①\"> create argMin/argMax operation</a> given \"argMax\", <var>input</var>, <var>axis</var> and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/batchNormalization(input, mean, variance, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-batchnormalization",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot⑦\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑤\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑤\">this</a> and any of <var>input</var>, <var>mean</var>, <var>variance</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-scale\" id=\"ref-for-dom-mlbatchnormalizationoptions-scale①\">scale</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-bias\" id=\"ref-for-dom-mlbatchnormalizationoptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-axis\" id=\"ref-for-dom-mlbatchnormalizationoptions-axis⑤\">axis</a></code> is not in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range\">the range</a> 0 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②\">rank</a>, exclusive, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>mean</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>mean</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④\">shape</a> is not equal to « <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤\">shape</a>[<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-axis\" id=\"ref-for-dom-mlbatchnormalizationoptions-axis⑥\">axis</a></code>] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>variance</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>variance</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥\">shape</a> is not equal to « <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦\">shape</a>[<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-axis\" id=\"ref-for-dom-mlbatchnormalizationoptions-axis⑦\">axis</a></code>] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-epsilon\" id=\"ref-for-dom-mlbatchnormalizationoptions-epsilon①\">epsilon</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast②\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-epsilon\" id=\"ref-for-dom-mlbatchnormalizationoptions-epsilon②\">epsilon</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦\">dataType</a>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-scale\" id=\"ref-for-dom-mlbatchnormalizationoptions-scale②\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑦\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧\">shape</a> is not equal to « <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑨\">shape</a>[<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-axis\" id=\"ref-for-dom-mlbatchnormalizationoptions-axis⑧\">axis</a></code>] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑧\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-bias\" id=\"ref-for-dom-mlbatchnormalizationoptions-bias②\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑨\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①⓪\">shape</a> is not equal to « <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①①\">shape</a>[<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-axis\" id=\"ref-for-dom-mlbatchnormalizationoptions-axis⑨\">axis</a></code>] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③⓪\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①④\">operator</a> for the \"batchNormalization\" operation, given <var>input</var>, <var>mean</var>, <var>variance</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand④\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑥\">this</a> and <var>input</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot⑦\">[[descriptor]]</a></code>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③\">inputs</a> to <var>input</var>, <var>mean</var>, and <var>variance</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-scale\" id=\"ref-for-dom-mlbatchnormalizationoptions-scale③\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlbatchnormalizationoptions-bias\" id=\"ref-for-dom-mlbatchnormalizationoptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⓪\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/cast(input, type, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-cast",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑦\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot⑧\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑥\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑧\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①⑤\">operator</a> for the \"cast\" operation, given <var>type</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/clamp(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-clamp",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑨\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot⑨\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑦\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand④\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⓪\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>minValue</var> be the <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlclampoptions-minvalue\" id=\"ref-for-dom-mlclampoptions-minvalue①\">minValue</a></code> if given, or Infinity otherwise.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlclampoptions-minvalue\" id=\"ref-for-dom-mlclampoptions-minvalue②\">minValue</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast③\">casting</a> <var>minValue</var> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③\">dataType</a>.</p>"
        },
        {
          "html": "<p>Let <var>maxValue</var> be the <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlclampoptions-maxvalue\" id=\"ref-for-dom-mlclampoptions-maxvalue①\">maxValue</a></code> if given, or -Infinity otherwise.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlclampoptions-maxvalue\" id=\"ref-for-dom-mlclampoptions-maxvalue②\">maxValue</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast④\">casting</a> <var>maxValue</var> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①④\">dataType</a>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlclampoptions-minvalue\" id=\"ref-for-dom-mlclampoptions-minvalue③\">minValue</a></code> is greater than <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlclampoptions-maxvalue\" id=\"ref-for-dom-mlclampoptions-maxvalue③\">maxValue</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①⑥\">operator</a> for the \"clamp\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑤\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑦\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/concat(inputs, axis, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-concat",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④①\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①⓪\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑧\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand⑤\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④②\">this</a> and any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item\">item</a> in <var>inputs</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>inputs</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty①\">is empty</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>first</var> be <var>inputs</var>[0].</p>"
        },
        {
          "html": "<p>If <var>axis</var> is greater than or equal to <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank④\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor②\">creating an MLOperandDescriptor</a> given <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⑤\">dataType</a> and <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①②\">shape</a>.</p>"
        },
        {
          "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape⑦\">shape</a></code>[<var>axis</var>] to <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①③\">shape</a>[<var>axis</var>].</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate③\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①\">the range</a> 1 to <var>inputs</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑦\">size</a>, exclusive:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>input</var> be <var>inputs</var>[<var>index</var>].</p>"
            },
            {
              "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⑥\">dataType</a> is not equal to <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⑦\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③⑦\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤\">rank</a> is not equal to <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑥\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate④\">For each</a> <var>dim</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range②\">the range</a> 0 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑦\">rank</a>, exclusive:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>dim</var> is not equal to <var>axis</var> and if <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①④\">shape</a>[<var>dim</var>] is not equal to <var>first</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①⑤\">shape</a>[<var>dim</var>], then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③⑨\">TypeError</a></code>.</p>"
                },
                {
                  "html": "If <var>dim</var> is equal to <var>axis</var>:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>size</var> be the sum of <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape⑧\">shape</a></code>[<var>axis</var>] and <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①⑥\">shape</a>[<var>dim</var>].</p>"
                    },
                    {
                      "html": "<p>If <var>size</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension①\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④⓪\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape⑨\">shape</a></code>[<var>axis</var>] to <var>size</var>.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand⑤\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④③\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①⑦\">operator</a> for the \"concat\" operation, given <var>inputs</var>, <var>axis</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑥\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑧\">inputs</a> to <var>inputs</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output④\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate conv output size",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-conv-output-size",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>effectiveFilterSize</var> be ( <var>filterSize</var> - 1 ) * <var>dilation</var> + 1.</p>"
        },
        {
          "html": "<p>Let <var>outputSize</var> be ( <var>inputSize</var> - <var>effectiveFilterSize</var> + <var>beginningPadding</var> + <var>endingPadding</var> ) / <var>stride</var> + 1.</p>"
        },
        {
          "html": "<p>Return <var>outputSize</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate conv2d output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-conv2d-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>outputHeight</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-conv-output-size\" id=\"ref-for-mlgraphbuilder-calculate-conv-output-size\">calculating conv output size</a> given <var>inputHeight</var>, <var>filterHeight</var>, <var>padding</var>[0], <var>padding</var>[1], <var>strides</var>[0] and <var>dilations</var>[0].</p>"
        },
        {
          "html": "<p>Let <var>outputWidth</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-conv-output-size\" id=\"ref-for-mlgraphbuilder-calculate-conv-output-size①\">calculating conv output size</a> given <var>inputWidth</var>, <var>filterWidth</var>, <var>padding</var>[2], <var>padding</var>[3], <var>strides</var>[1] and <var>dilations</var>[1].</p>"
        },
        {
          "html": "<p>Return « <var>outputHeight</var>, <var>outputWidth</var> ».</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/conv2d(input, filter, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-conv2d",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①①\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④③\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑨\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand⑥\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑤\">this</a> and any of <var>input</var>, <var>filter</var>, and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-bias\" id=\"ref-for-dom-mlconv2doptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①①\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⑧\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32⑤\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑧\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>filter</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑨\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>filter</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⑨\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②⓪\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-padding\" id=\"ref-for-dom-mlconv2doptions-padding①\">padding</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①②\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤\">list</a> « 0, 0, 0, 0 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-padding\" id=\"ref-for-dom-mlconv2doptions-padding②\">padding</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑧\">size</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-strides\" id=\"ref-for-dom-mlconv2doptions-strides①\">strides</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①③\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥\">list</a> « 1, 1 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-strides\" id=\"ref-for-dom-mlconv2doptions-strides②\">strides</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑨\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any element in <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-strides\" id=\"ref-for-dom-mlconv2doptions-strides③\">strides</a></code> is equal to 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-dilations\" id=\"ref-for-dom-mlconv2doptions-dilations①\">dilations</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①④\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑦\">list</a> « 1, 1 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-dilations\" id=\"ref-for-dom-mlconv2doptions-dilations②\">dilations</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⓪\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any element in <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-dilations\" id=\"ref-for-dom-mlconv2doptions-dilations③\">dilations</a></code> is equal to 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-groups\" id=\"ref-for-dom-mlconv2doptions-groups②\">groups</a></code> is 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Calculate the output shape:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>inputShape</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①⑦\">shape</a>.</p>"
            },
            {
              "html": "Switch on <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-inputlayout\" id=\"ref-for-dom-mlconv2doptions-inputlayout③\">inputLayout</a></code>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"nchw\"",
                      "html": "<p>Let « <var>batches</var>, <var>inputChannels</var>, <var>inputHeight</var>, <var>inputWidth</var> » be <var>inputShape</var>.</p>"
                    },
                    {
                      "case": "\"nhwc\"",
                      "html": "<p>Let « <var>batches</var>, <var>inputHeight</var>, <var>inputWidth</var>, <var>inputChannels</var> » be <var>inputShape</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Let <var>filterShape</var> be <var>filter</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①⑧\">shape</a>.</p>"
            },
            {
              "html": "Switch on <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-filterlayout\" id=\"ref-for-dom-mlconv2doptions-filterlayout②\">filterLayout</a></code>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"hwio\"",
                      "html": "<p>Let « <var>filterHeight</var>, <var>filterWidth</var>, <var>filterInputChannels</var>, <var>outputChannels</var> » be <var>filterShape</var>.</p>"
                    },
                    {
                      "case": "\"ohwi\"",
                      "html": "<p>Let « <var>outputChannels</var>, <var>filterHeight</var>, <var>filterWidth</var>, <var>filterInputChannels</var> » be <var>filterShape</var>.</p>"
                    },
                    {
                      "case": "\"ihwo\"",
                      "html": "<p>Let « <var>filterInputChannels</var>, <var>filterHeight</var>, <var>filterWidth</var>, <var>outputChannels</var> » be <var>filterShape</var>.</p>"
                    },
                    {
                      "case": "\"oihw\"",
                      "html": "<p>Let « <var>outputChannels</var>, <var>filterInputChannels</var>, <var>filterHeight</var>, <var>filterWidth</var> » be <var>filterShape</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If <var>inputChannels</var> % <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-groups\" id=\"ref-for-dom-mlconv2doptions-groups③\">groups</a></code> is not 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>inputChannels</var> / <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-groups\" id=\"ref-for-dom-mlconv2doptions-groups④\">groups</a></code> is not equal to <var>filterInputChannels</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤③\">TypeError</a></code>.</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-bias\" id=\"ref-for-dom-mlconv2doptions-bias②\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑤\">exists</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape①⑨\">shape</a> is not equal to « <var>outputChannels</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤④\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②①\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②②\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤⑤\">TypeError</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>outputSizes</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-conv2d-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-conv2d-output-sizes\">calculating conv2d output sizes</a> given <var>inputHeight</var>, <var>inputWidth</var>, <var>filterHeight</var>, <var>filterWidth</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-padding\" id=\"ref-for-dom-mlconv2doptions-padding③\">padding</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-strides\" id=\"ref-for-dom-mlconv2doptions-strides④\">strides</a></code>, and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-dilations\" id=\"ref-for-dom-mlconv2doptions-dilations④\">dilations</a></code>.</p>"
            },
            {
              "html": "Switch on <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-inputlayout\" id=\"ref-for-dom-mlconv2doptions-inputlayout④\">inputLayout</a></code>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"nchw\"",
                      "html": "<p>Let <var>outputShape</var> be « <var>batches</var>, <var>outputChannels</var>, floor( <var>outputSizes</var>[0] ), floor( <var>outputSizes</var>[1] ) ».</p>"
                    },
                    {
                      "case": "\"nhwc\"",
                      "html": "<p>Let <var>outputShape</var> be « <var>batches</var>, floor( <var>outputSizes</var>[0] ), floor( <var>outputSizes</var>[1] ), <var>outputChannels</var> ».</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①\">item</a> in <var>outputShape</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension②\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor③\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②③\">dataType</a> and <var>outputShape</var>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand⑥\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑥\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①⑧\">operator</a> for the \"conv2d\" operation, given <var>options</var> and <var>filter</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑦\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑨\">inputs</a> to <var>input</var> and <var>filter</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-bias\" id=\"ref-for-dom-mlconv2doptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑥\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①⓪\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output⑤\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate convtranspose output size",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-convtranspose-output-size",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>effectiveFilterSize</var> be ( <var>filterSize</var> - 1 ) * <var>dilation</var> + 1.</p>"
        },
        {
          "html": "<p>Let <var>outputSize</var> be ( <var>inputSize</var> - 1 ) * <var>stride</var> + <var>effectiveFilterSize</var> - <var>beginningPadding</var> - <var>endingPadding</var> + <var>outputPadding</var>.</p>"
        },
        {
          "html": "<p>Return <var>outputSize</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate convtranspose2d output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-convtranspose2d-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>outputHeight</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-convtranspose-output-size\" id=\"ref-for-mlgraphbuilder-calculate-convtranspose-output-size\">calculating convtranspose output size</a> given <var>inputHeight</var>, <var>filterHeight</var>, <var>padding</var>[0], <var>padding</var>[1], <var>strides</var>[0], <var>dilations</var>[0], and <var>outputPadding</var>[0].</p>"
        },
        {
          "html": "<p>Let <var>outputWidth</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-convtranspose-output-size\" id=\"ref-for-mlgraphbuilder-calculate-convtranspose-output-size①\">calculating convtranspose output size</a> given <var>inputWidth</var>, <var>filterWidth</var>, <var>padding</var>[2], <var>padding</var>[3], <var>strides</var>[1], <var>dilations</var>[1] and <var>outputPadding</var>[1].</p>"
        },
        {
          "html": "<p>Return « <var>outputHeight</var>, <var>outputWidth</var> ».</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/convTranspose2d(input, filter, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-convtranspose2d",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑦\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①②\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⓪\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⓪\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand⑦\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑧\">this</a> and any of <var>input</var>, <var>filter</var>, and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-bias\" id=\"ref-for-dom-mlconvtranspose2doptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑦\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank①⓪\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②④\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32⑥\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>filter</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank①①\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>filter</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②⑤\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②⑥\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-padding\" id=\"ref-for-dom-mlconvtranspose2doptions-padding①\">padding</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑧\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①③\">list</a> « 0, 0, 0, 0 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-padding\" id=\"ref-for-dom-mlconvtranspose2doptions-padding②\">padding</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①①\">size</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-strides\" id=\"ref-for-dom-mlconvtranspose2doptions-strides②\">strides</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑨\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①④\">list</a> « 1, 1 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-strides\" id=\"ref-for-dom-mlconvtranspose2doptions-strides③\">strides</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①②\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any element in <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-strides\" id=\"ref-for-dom-mlconv2doptions-strides⑤\">strides</a></code> is equal to 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-dilations\" id=\"ref-for-dom-mlconvtranspose2doptions-dilations①\">dilations</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⓪\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑤\">list</a> « 1, 1 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-dilations\" id=\"ref-for-dom-mlconvtranspose2doptions-dilations②\">dilations</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①③\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any element in <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-dilations\" id=\"ref-for-dom-mlconvtranspose2doptions-dilations③\">dilations</a></code> is equal to 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputpadding\" id=\"ref-for-dom-mlconvtranspose2doptions-outputpadding③\">outputPadding</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②①\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑥\">list</a> « 0, 0 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputpadding\" id=\"ref-for-dom-mlconvtranspose2doptions-outputpadding④\">outputPadding</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①④\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputsizes\" id=\"ref-for-dom-mlconvtranspose2doptions-outputsizes②\">outputSizes</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②②\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑤\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥⑧\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputpadding\" id=\"ref-for-dom-mlconvtranspose2doptions-outputpadding⑤\">outputPadding</a></code>[0] is greater than or equal to <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-strides\" id=\"ref-for-dom-mlconvtranspose2doptions-strides④\">strides</a></code>[0], or <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputpadding\" id=\"ref-for-dom-mlconvtranspose2doptions-outputpadding⑥\">outputPadding</a></code>[1] is greater than or equal to <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-strides\" id=\"ref-for-dom-mlconvtranspose2doptions-strides⑤\">strides</a></code>[1], then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥⑨\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-groups\" id=\"ref-for-dom-mlconvtranspose2doptions-groups②\">groups</a></code> is 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Calculate the output shape:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>inputShape</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②⓪\">shape</a>.</p>"
            },
            {
              "html": "Switch on <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-inputlayout\" id=\"ref-for-dom-mlconvtranspose2doptions-inputlayout③\">inputLayout</a></code>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"nchw\"",
                      "html": "<p>Let « <var>batches</var>, <var>inputChannels</var>, <var>inputHeight</var>, <var>inputWidth</var> » be <var>inputShape</var>.</p>"
                    },
                    {
                      "case": "\"nhwc\"",
                      "html": "<p>Let « <var>batches</var>, <var>inputHeight</var>, <var>inputWidth</var>, <var>inputChannels</var> » be <var>inputShape</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Let <var>filterShape</var> be <var>filter</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②①\">shape</a>.</p>"
            },
            {
              "html": "Switch on <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-filterlayout\" id=\"ref-for-dom-mlconvtranspose2doptions-filterlayout②\">filterLayout</a></code>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"iohw\"",
                      "html": "<p>Let « <var>filterInputChannels</var>, <var>filterOutputChannels</var>, <var>filterHeight</var>, <var>filterWidth</var> » be <var>filterShape</var>.</p>"
                    },
                    {
                      "case": "\"hwoi\"",
                      "html": "<p>Let « <var>filterHeight</var>, <var>filterWidth</var>, <var>filterOutputChannels</var>, <var>filterInputChannels</var> » be <var>filterShape</var>.</p>"
                    },
                    {
                      "case": "\"ohwi\"",
                      "html": "<p>Let « <var>filterOutputChannels</var>, <var>filterHeight</var>, <var>filterWidth</var>, <var>filterInputChannels</var> » be <var>filterShape</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If <var>inputChannels</var> is not equal to <var>filterInputChannels</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>outputChannels</var> be <var>filterOutputChannels</var> * <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-groups\" id=\"ref-for-dom-mlconvtranspose2doptions-groups③\">groups</a></code>.</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-bias\" id=\"ref-for-dom-mlconvtranspose2doptions-bias②\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②③\">exists</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②②\">shape</a> is not equal to « <var>outputChannels</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦②\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②⑦\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②⑧\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦③\">TypeError</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputsizes\" id=\"ref-for-dom-mlconvtranspose2doptions-outputsizes③\">outputSizes</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②④\">exists</a>, let <var>outputSizes</var> be <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputsizes\" id=\"ref-for-dom-mlconvtranspose2doptions-outputsizes④\">outputSizes</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, let <var>outputSizes</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-convtranspose2d-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-convtranspose2d-output-sizes\">calculating convtranspose2d output sizes</a> given <var>inputHeight</var>, <var>inputWidth</var>, <var>filterHeight</var>, <var>filterWidth</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-padding\" id=\"ref-for-dom-mlconvtranspose2doptions-padding③\">padding</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-strides\" id=\"ref-for-dom-mlconvtranspose2doptions-strides⑥\">strides</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-dilations\" id=\"ref-for-dom-mlconvtranspose2doptions-dilations④\">dilations</a></code>, and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-outputpadding\" id=\"ref-for-dom-mlconvtranspose2doptions-outputpadding⑦\">outputPadding</a></code>.</p>"
            },
            {
              "html": "Switch on <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconvtranspose2doptions-inputlayout\" id=\"ref-for-dom-mlconvtranspose2doptions-inputlayout④\">inputLayout</a></code>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"nchw\"",
                      "html": "<p>Let <var>outputShape</var> be « <var>batches</var>, <var>outputChannels</var>, floor( <var>outputSizes</var>[0] ), floor( <var>outputSizes</var>[1] ) ».</p>"
                    },
                    {
                      "case": "\"nhwc\"",
                      "html": "<p>Let <var>outputShape</var> be « <var>batches</var>, floor( <var>outputSizes</var>[0] ), floor( <var>outputSizes</var>[1] ), <var>outputChannels</var> ».</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item②\">item</a> in <var>outputShape</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension③\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor④\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype②⑨\">dataType</a> and <var>outputShape</var>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand⑦\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑨\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators①⑨\">operator</a> for the \"convTranspose2d\" operation, given <var>options</var> and <var>filter</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑧\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①①\">inputs</a> to <var>input</var> and <var>filter</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlconv2doptions-bias\" id=\"ref-for-dom-mlconv2doptions-bias④\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑤\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①②\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output⑥\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/element-wise-binary-op",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert②\">Assert</a>: <var>op</var> is one of \"add\", \"sub\", \"mul\", \"div\", \"max\", \"min\", \"pow\".</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①③\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑨\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①①\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand⑧\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤①\">this</a> and any of <var>a</var> and <var>b</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③⓪\">dataType</a> is not equal to <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③①\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting\" id=\"ref-for-bidirectionally-broadcasting\">bidirectionally broadcasting</a> <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②③\">shape</a> and <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②④\">shape</a>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>descriptor</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor⑤\">creating an MLOperandDescriptor</a> given <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③②\">dataType</a> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand⑧\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤②\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②⓪\">operator</a> for the <var>op</var> operation, given <var>a</var>, <var>b</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑨\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①③\">inputs</a> to <var>a</var> and <var>b</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output⑦\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/add(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-add",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"add(a, b, options)|add(a, b)\" id=\"dom-mlgraphbuilder-add\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>add(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op①\"> create element-wise binary operation</a> given \"add\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧③\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧④\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/sub(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-sub",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"sub(a, b, options)|sub(a, b)\" id=\"dom-mlgraphbuilder-sub\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>sub(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op②\"> create element-wise binary operation</a> given \"sub\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑤\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑥\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/mul(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-mul",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"mul(a, b, options)|mul(a, b)\" id=\"dom-mlgraphbuilder-mul\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>mul(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op③\"> create element-wise binary operation</a> given \"mul\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑦\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑧\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/div(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-div",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"div(a, b, options)|div(a, b)\" id=\"dom-mlgraphbuilder-div\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>div(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op④\"> create element-wise binary operation</a> given \"div\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑨\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⓪\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/max(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-max",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"max(a, b, options)|max(a, b)\" id=\"dom-mlgraphbuilder-max\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>max(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op⑤\"> create element-wise binary operation</a> given \"max\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨①\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨②\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/min(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-min",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"min(a, b, options)|min(a, b)\" id=\"dom-mlgraphbuilder-min\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>min(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op⑥\"> create element-wise binary operation</a> given \"min\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨③\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨④\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/pow(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-pow",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"pow(a, b, options)|pow(a, b)\" id=\"dom-mlgraphbuilder-pow\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>pow(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-binary-op\" id=\"ref-for-mlgraphbuilder-element-wise-binary-op⑦\"> create element-wise binary operation</a> given \"pow\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑤\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑥\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/element-wise-logical-op",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert③\">Assert</a>: <var>op</var> is one of \"equal\", \"greater\", \"greaterOrEqual\", \"lesser\", \"lesserOrEqual\", \"logicalNot\".</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤③\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①④\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②②\">DOMException</a></code>.</p>"
        },
        {
          "html": "If <var>op</var> is \"logicalNot\":",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand⑨\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤④\">this</a> and <var>a</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③③\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint8\" id=\"ref-for-dom-mloperanddatatype-uint8⑤\">\"uint8\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦⑨\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>outputShape</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①\">clone</a> of <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②⑤\">shape</a>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①⓪\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑤\">this</a> and any of <var>a</var> and <var>b</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧⓪\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③④\">dataType</a> is not equal to <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③⑤\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting\" id=\"ref-for-bidirectionally-broadcasting①\">bidirectionally broadcasting</a> <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②⑥\">shape</a> and <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②⑦\">shape</a>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧②\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>descriptor</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor⑥\">creating an MLOperandDescriptor</a> given <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint8\" id=\"ref-for-dom-mloperanddatatype-uint8⑥\">\"uint8\"</a></code> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand⑨\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑥\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②①\">operator</a> for the <var>op</var> operation, given <var>a</var> and (if <var>op</var> is not \"logicalNot\") <var>b</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①⓪\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①④\">inputs</a> to <var>a</var> and (if <var>op</var> is anything other than \"logicalNot\") <var>b</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output⑧\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/equal(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-equal",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"equal(a, b, options)|equal(a, b)\" id=\"dom-mlgraphbuilder-equal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>equal(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op\" id=\"ref-for-mlgraphbuilder-element-wise-logical-op①\"> create element-wise logical operation</a> given \"equal\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪③\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪④\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/greater(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-greater",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"greater(a, b, options)|greater(a, b)\" id=\"dom-mlgraphbuilder-greater\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>greater(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op\" id=\"ref-for-mlgraphbuilder-element-wise-logical-op②\"> create element-wise logical operation</a> given \"greater\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⑤\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⑥\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/greaterOrEqual(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-greaterorequal",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"greaterOrEqual(a, b, options)|greaterOrEqual(a, b)\" id=\"dom-mlgraphbuilder-greaterorequal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>greaterOrEqual(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op\" id=\"ref-for-mlgraphbuilder-element-wise-logical-op③\"> create element-wise logical operation</a> given \"greaterOrEqual\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⑦\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⑧\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/lesser(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-lesser",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"lesser(a, b, options)|lesser(a, b)\" id=\"dom-mlgraphbuilder-lesser\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>lesser(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op\" id=\"ref-for-mlgraphbuilder-element-wise-logical-op④\"> create element-wise logical operation</a> given \"lesser\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⑨\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①⓪\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/lesserOrEqual(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-lesserorequal",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"lesserOrEqual(a, b, options)|lesserOrEqual(a, b)\" id=\"dom-mlgraphbuilder-lesserorequal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>lesserOrEqual(<var>a</var>, <var>b</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op\" id=\"ref-for-mlgraphbuilder-element-wise-logical-op⑤\"> create element-wise logical operation</a> given \"lesserOrEqual\", <var>a</var>, <var>b</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①①\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①②\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/logicalNot(a, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-logicalnot",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"logicalNot(a, options)|logicalNot(a)\" id=\"dom-mlgraphbuilder-logicalnot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>logicalNot(<var>a</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-logical-op\" id=\"ref-for-mlgraphbuilder-element-wise-logical-op⑥\"> create element-wise logical operation</a> given \"logicalNot\", <var>a</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①③\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①④\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/element-wise-unary-op",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert④\">Assert</a>: <var>op</var> is one of \"abs\", \"ceil\", \"cos\", \"erf\", \"exp\", \"floor\", \"identity\", \"log\", \"neg\", \"reciprocal\", \"sin\", \"sqrt\", \"tan\".</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑦\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①⑤\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①⑤\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①③\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①①\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑧\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>allowedDataTypes</var> is given and it does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain\">contain</a> <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③⑥\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand②\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②②\">operator</a> for the <var>op</var> operation given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①①\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①⑤\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output⑨\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/abs(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-abs",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"abs(input, options)|abs(input)\" id=\"dom-mlgraphbuilder-abs\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>abs(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op①\"> create element-wise unary operation</a> given \"abs\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32⑦\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16⑤\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32②\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int8\" id=\"ref-for-dom-mloperanddatatype-int8④\">\"int8\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①⑧\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①⑨\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/ceil(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-ceil",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"ceil(input, options)|ceil(input)\" id=\"dom-mlgraphbuilder-ceil\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>ceil(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op②\"> create element-wise unary operation</a> given \"ceil\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32⑧\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16⑥\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②⓪\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②①\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/cos(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-cos",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"cos(input, options)|cos(input)\" id=\"dom-mlgraphbuilder-cos\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>cos(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op③\"> create element-wise unary operation</a> given \"cos\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32⑨\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16⑦\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②②\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②③\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/erf(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-erf",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"erf(input, options)|erf(input)\" id=\"dom-mlgraphbuilder-erf\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>erf(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op④\"> create element-wise unary operation</a> given \"erf\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①⓪\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16⑧\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②④\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②⑤\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/exp(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-exp",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"exp(input, options)|exp(input)\" id=\"dom-mlgraphbuilder-exp\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>exp(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op⑤\"> create element-wise unary operation</a> given \"exp\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①①\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16⑨\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②⑥\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②⑦\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/floor(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-floor",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"floor(input, options)|floor(input)\" id=\"dom-mlgraphbuilder-floor\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>floor(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op⑥\"> create element-wise unary operation</a> given \"floor\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①②\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①⓪\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②⑧\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②⑨\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/identity(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-identity",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"identity(input, options)|identity(input)\" id=\"dom-mlgraphbuilder-identity\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>identity(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op⑦\"> create element-wise unary operation</a> given \"identity\" <var>input</var>, and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③⓪\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③①\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/log(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-log",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"log(input, options)|log(input)\" id=\"dom-mlgraphbuilder-log\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>log(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op⑧\"> create element-wise unary operation</a> given \"log\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①③\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①①\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③②\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③③\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/neg(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-neg",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"neg(input, options)|neg(input)\" id=\"dom-mlgraphbuilder-neg\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>neg(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op⑨\"> create element-wise unary operation</a> given \"neg\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①④\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①②\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32③\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int8\" id=\"ref-for-dom-mloperanddatatype-int8⑤\">\"int8\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③④\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③⑤\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reciprocal(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reciprocal",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reciprocal(input, options)|reciprocal(input)\" id=\"dom-mlgraphbuilder-reciprocal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reciprocal(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op①⓪\"> create element-wise unary operation</a> given \"reciprocal\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①⑤\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①③\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③⑥\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③⑦\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/sin(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-sin",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"sin(input, options)|sin(input)\" id=\"dom-mlgraphbuilder-sin\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>sin(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op①①\"> create element-wise unary operation</a> given \"sin\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①⑥\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①④\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③⑧\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③⑨\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/sqrt(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-sqrt",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"sqrt(input, options)|sqrt(input)\" id=\"dom-mlgraphbuilder-sqrt\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>sqrt(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op①②\"> create element-wise unary operation</a> given \"sqrt\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①⑦\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①⑤\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④⓪\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④①\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/tan(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-tan",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"tan(input, options)|tan(input)\" id=\"dom-mlgraphbuilder-tan\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>tan(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-element-wise-unary-op\" id=\"ref-for-mlgraphbuilder-element-wise-unary-op①③\"> create element-wise unary operation</a> given \"tan\", <var>input</var>, « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①⑧\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①⑥\">\"float16\"</a></code> », and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④②\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④③\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/elu(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-elu",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑨\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①⑥\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④④\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①④\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①②\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⓪\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③⑦\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32①⑨\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①⑦\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mleluoptions-alpha\" id=\"ref-for-dom-mleluoptions-alpha①\">alpha</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast⑤\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mleluoptions-alpha\" id=\"ref-for-dom-mleluoptions-alpha②\">alpha</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③⑧\">dataType</a>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand③\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②③\">operator</a> for the \"elu\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①②\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①⑥\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①⓪\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/expand(input, newShape, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-expand",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥①\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①⑦\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑤\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①③\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥②\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#unidirectionally-broadcasting\" id=\"ref-for-unidirectionally-broadcasting\">unidirectionally broadcasting</a> <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②⑧\">shape</a> and <var>newShape</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧⑧\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>outputDescriptor</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor⑦\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype③⑨\">dataType</a> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①⓪\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥③\">this</a> and <var>outputDescriptor</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②④\">operator</a> for the \"expand\" operation, given <var>input</var>, <var>newShape</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①③\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①⑦\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①①\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/gather(input, indices, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-gather",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①⑧\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤⓪\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑥\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①④\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑤\">this</a> and any of <var>input</var> and <var>indices</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>indices</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④⓪\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32⑤\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint32\" id=\"ref-for-dom-mloperanddatatype-uint32④\">\"uint32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int64\" id=\"ref-for-dom-mloperanddatatype-int64④\">\"int64\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>shapeInput</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape②⑨\">shape</a> and <var>rankInput</var> be <var>shapeInput</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②⓪\">rank</a>.</p>"
        },
        {
          "html": "<p>Let <var>shapeIndices</var> be <var>indices</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③⓪\">shape</a>.</p>"
        },
        {
          "html": "<p>Let <var>axis</var> be <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgatheroptions-axis\" id=\"ref-for-dom-mlgatheroptions-axis①\">axis</a></code>.</p>"
        },
        {
          "html": "<p>If <var>axis</var> is greater than or equal to <var>rankInput</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>dimCount</var> be zero.</p>"
        },
        {
          "html": "<p>Let <var>rankOutput</var> be zero.</p>"
        },
        {
          "html": "<p>Let <var>shapeOutput</var> be an empty list.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑤\">For each</a> <var>size</var> of <var>shapeInput</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>dimCount</var> is equal to <var>axis</var> then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break\">break</a>.</p>"
            },
            {
              "html": "<p>Set <var>shapeOutput</var>[<var>dimCount</var>] to <var>size</var>.</p>"
            },
            {
              "html": "<p>Increment <var>dimCount</var> by one.</p>"
            }
          ]
        },
        {
          "html": "<p>Set <var>rankOutput</var> to <var>dimCount</var>.</p>"
        },
        {
          "html": "<p>Let <var>dimCount</var> be zero.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑥\">For each</a> <var>size</var> of <var>shapeIndices</var>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>shapeOutput</var>[<var>rankOutput</var> + <var>dimCount</var>] to <var>size</var>.</p>"
            },
            {
              "html": "<p>Increment <var>dimCount</var> by one.</p>"
            }
          ]
        },
        {
          "html": "<p>Set <var>rankOutput</var> to <var>rankOutput</var> + <var>dimCount</var>.</p>"
        },
        {
          "html": "<p>Let <var>dimCount</var> be zero.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑦\">For each</a> <var>size</var> of <var>shapeInput</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>dimCount</var> is less than or equal to <var>axis</var> then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue\">continue</a>.</p>"
            },
            {
              "html": "<p>Set <var>shapeOutput</var>[<var>rankOutput</var> + <var>dimCount</var> - <var>axis</var> - 1] to <var>size</var>.</p>"
            },
            {
              "html": "<p>Increment <var>dimCount</var> by one.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor⑧\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④①\">dataType</a> and <var>shapeOutput</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①①\">creating an MLOperand</a> given <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②⑤\">operator</a> for the \"gather\" operation, given <var>input</var>, <var>indices</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①④\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①⑧\">inputs</a> to <var>input</var> and <var>indices</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①②\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/gelu(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-gelu",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑥\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot①⑨\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤④\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑦\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①⑤\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑦\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④②\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②⓪\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①⑧\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand④\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②⑥\">operator</a> for the \"gelu\" operation given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①⑤\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input①⑨\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①③\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/gemm(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-gemm",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②⓪\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑧\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①⑥\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑨\">this</a> and any of <var>a</var> and <var>b</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④③\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②①\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16①⑨\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④④\">dataType</a> is not equal to <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④⑤\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②①\">rank</a> is not 2 or <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②②\">rank</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-alpha\" id=\"ref-for-dom-mlgemmoptions-alpha①\">alpha</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast⑥\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-alpha\" id=\"ref-for-dom-mlgemmoptions-alpha②\">alpha</a></code> to <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④⑥\">dataType</a>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-beta\" id=\"ref-for-dom-mlgemmoptions-beta①\">beta</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast⑦\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-beta\" id=\"ref-for-dom-mlgemmoptions-beta②\">beta</a></code> to <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④⑦\">dataType</a>.</p>"
        },
        {
          "html": "<p>Let <var>shapeA</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone②\">clone</a> of <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③①\">shape</a>.</p>"
        },
        {
          "html": "<p>Let <var>shapeB</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone③\">clone</a> of <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③②\">shape</a>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-atranspose\" id=\"ref-for-dom-mlgemmoptions-atranspose①\">aTranspose</a></code> is true, then reverse the order of the items in <var>shapeA</var>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-btranspose\" id=\"ref-for-dom-mlgemmoptions-btranspose①\">bTranspose</a></code> is true, then reverse the order of the items in <var>shapeB</var>.</p>"
        },
        {
          "html": "<p>If <var>shapeA</var>[1] is not equal to <var>shapeB</var>[0], then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-c\" id=\"ref-for-dom-mlgemmoptions-c②\">c</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑥\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If it is not <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#unidirectionally-broadcastable\" id=\"ref-for-unidirectionally-broadcastable③\">unidirectionally broadcastable</a> to the shape « <var>shapeA</var>[0], <var>shapeB</var>[1] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨⑨\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④⑧\">dataType</a> is not equal to <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype④⑨\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪⓪\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor⑨\">creating an MLOperandDescriptor</a> given <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤⓪\">dataType</a> and « <var>shapeA</var>[0], <var>shapeB</var>[1] ».</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①②\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⓪\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②⑦\">operator</a> for the \"gemm\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①⑥\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②⓪\">inputs</a> to <var>a</var> and <var>b</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgemmoptions-c\" id=\"ref-for-dom-mlgemmoptions-c③\">c</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑦\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②①\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①④\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/gru(input, weight, recurrentWeight, steps, hiddenSize, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-gru",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦①\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②①\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥⑤\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑨\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①⑦\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦②\">this</a> and any of <var>input</var>, <var>weight</var>, <var>recurrentWeight</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-bias\" id=\"ref-for-dom-mlgruoptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑧\">exists</a>), <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-recurrentbias\" id=\"ref-for-dom-mlgruoptions-recurrentbias①\">recurrentBias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑨\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-initialhiddenstate\" id=\"ref-for-dom-mlgruoptions-initialhiddenstate①\">initialHiddenState</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⓪\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤①\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②②\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②⓪\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②③\">rank</a> is not 3, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤②\">dataType</a> of either <var>weight</var> or <var>recurrentWeight</var> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤③\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③③\">shape</a>[0] is not equal to <var>steps</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>batchSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③④\">shape</a>[1].</p>"
        },
        {
          "html": "<p>Let <var>inputSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③⑤\">shape</a>[2].</p>"
        },
        {
          "html": "<p>Let <var>numDirections</var> be 2 if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-direction\" id=\"ref-for-dom-mlgruoptions-direction①\">direction</a></code> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkdirection-both\" id=\"ref-for-dom-mlrecurrentnetworkdirection-both①\">\"both\"</a></code>, or 1 otherwise.</p>"
        },
        {
          "html": "<p>If <var>weight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③⑥\">shape</a> is not equal to « <var>numDirections</var>, 3 * <var>hiddenSize</var>, <var>inputSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>recurrentWeight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③⑦\">shape</a> is not equal to « <var>numDirections</var>, 3 * <var>hiddenSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>hiddenSize</var> * 6 is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension④\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-bias\" id=\"ref-for-dom-mlgruoptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③①\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤④\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤⑤\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪⑨\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③⑧\">shape</a> is not equal to « <var>numDirections</var>, 3 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①⓪\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-recurrentbias\" id=\"ref-for-dom-mlgruoptions-recurrentbias③\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③②\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤⑥\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤⑦\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape③⑨\">shape</a> is not equal to « <var>numDirections</var>, 3 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①②\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-initialhiddenstate\" id=\"ref-for-dom-mlgruoptions-initialhiddenstate②\">initialHiddenState</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③③\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤⑧\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑤⑨\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①③\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④⓪\">shape</a> is not equal to « <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①④\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-activations\" id=\"ref-for-dom-mlgruoptions-activations①\">activations</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③④\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑥\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①⑤\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>activations</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone④\">clone</a> of <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-activations\" id=\"ref-for-dom-mlgruoptions-activations②\">activations</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>activations</var> be « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-sigmoid\" id=\"ref-for-dom-mlrecurrentnetworkactivation-sigmoid①\">\"sigmoid\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-tanh\" id=\"ref-for-dom-mlrecurrentnetworkactivation-tanh①\">\"tanh\"</a></code> ».</p>"
            }
          ]
        },
        {
          "html": "<em>Calculate the output shape:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>desc0</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①⓪\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥⓪\">dataType</a> and « <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> ».</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-returnsequence\" id=\"ref-for-dom-mlgruoptions-returnsequence②\">returnSequence</a></code> is true:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>desc1</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①①\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥①\">dataType</a> and « <var>steps</var>, <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> ».</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②⑧\">operator</a> for the \"gru\" operation, given <var>weight</var>, <var>recurrentWeight</var>, <var>steps</var>, <var>hiddenSize</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Let <var>output0</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①③\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦③\">this</a> and <var>desc0</var>.</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-returnsequence\" id=\"ref-for-dom-mlgruoptions-returnsequence③\">returnSequence</a></code> is true:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>output1</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①④\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦④\">this</a> and <var>desc1</var>.</p>"
                },
                {
                  "html": "<p>Let <var>output</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑧\">list</a> « <var>output0</var>, <var>output1</var> ».</p>"
                },
                {
                  "html": "<p>Set <var>output0</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①⑦\">[[operator]]</a></code> and <var>output1</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①⑧\">[[operator]]</a></code> to <var>operator</var>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>output</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑨\">list</a> « <var>output0</var> ».</p>"
                },
                {
                  "html": "<p>Set <var>output0</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot①⑨\">[[operator]]</a></code> to <var>operator</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②②\">inputs</a> to <var>input</var>, <var>weight</var>, and <var>recurrentWeight</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-bias\" id=\"ref-for-dom-mlgruoptions-bias④\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⑤\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②③\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-recurrentbias\" id=\"ref-for-dom-mlgruoptions-recurrentbias④\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⑥\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②④\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgruoptions-initialhiddenstate\" id=\"ref-for-dom-mlgruoptions-initialhiddenstate③\">initialHiddenState</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⑦\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②⑤\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-activation\" id=\"ref-for-operator-activation②\">activation functions</a> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone⑤\">clone</a> of <var>activations</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①⑤\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/gruCell(input, weight, recurrentWeight, hiddenState, hiddenSize, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-grucell",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑤\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②②\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧①\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⓪\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①⑧\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑥\">this</a> and any of <var>input</var>, <var>weight</var>, <var>recurrentWeight</var>, <var>hiddenState</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-bias\" id=\"ref-for-dom-mlgrucelloptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⑧\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-recurrentbias\" id=\"ref-for-dom-mlgrucelloptions-recurrentbias①\">recurrentBias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⑨\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥②\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②③\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②①\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②④\">rank</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>batchSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④①\">shape</a>[0].</p>"
        },
        {
          "html": "<p>Let <var>inputSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④②\">shape</a>[1].</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥③\">dataType</a> of any of <var>weight</var>, <var>recurrentWeight</var>, or <var>hiddenState</var> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥④\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>weight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④③\">shape</a> is not equal to « 3 * <var>hiddenSize</var>, <var>inputSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>recurrentWeight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④④\">shape</a> is not equal to « 3 * <var>hiddenSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>hiddenState</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④⑤\">shape</a> is not equal to « <var>batchSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>hiddenSize</var> * 6 is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension⑥\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②③\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-bias\" id=\"ref-for-dom-mlgrucelloptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④⓪\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥⑤\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥⑥\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④⑥\">shape</a> is not equal to « 3 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-recurrentbias\" id=\"ref-for-dom-mlgrucelloptions-recurrentbias③\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④①\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥⑦\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥⑧\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape④⑦\">shape</a> is not equal to « 3 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-activations\" id=\"ref-for-dom-mlgrucelloptions-activations①\">activations</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④②\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑦\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>activations</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone⑥\">clone</a> of <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-activations\" id=\"ref-for-dom-mlgrucelloptions-activations②\">activations</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>activations</var> be « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-sigmoid\" id=\"ref-for-dom-mlrecurrentnetworkactivation-sigmoid③\">\"sigmoid\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-tanh\" id=\"ref-for-dom-mlrecurrentnetworkactivation-tanh③\">\"tanh\"</a></code> ».</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①②\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑥⑨\">dataType</a> and « <var>batchSize</var>, <var>hiddenSize</var> ».</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①⑤\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑦\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators②⑨\">operator</a> for the \"gruCell\" operation, given <var>weight</var>, <var>recurrentWeight</var>, <var>hiddenState</var>, <var>hiddenSize</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②⓪\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②⑥\">inputs</a> to <var>input</var>, <var>weight</var>, <var>recurrentWeight</var>, and <var>hiddenState</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-bias\" id=\"ref-for-dom-mlgrucelloptions-bias④\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④③\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②⑦\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgrucelloptions-recurrentbias\" id=\"ref-for-dom-mlgrucelloptions-recurrentbias④\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④④\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②⑧\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-activation\" id=\"ref-for-operator-activation④\">activation functions</a> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone⑦\">clone</a> of <var>activations</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①⑥\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/hardSigmoid(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hardsigmoid",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②③\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨⑤\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②①\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand①⑨\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑨\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦⓪\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②④\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②②\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlhardsigmoidoptions-alpha\" id=\"ref-for-dom-mlhardsigmoidoptions-alpha①\">alpha</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast⑧\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlhardsigmoidoptions-alpha\" id=\"ref-for-dom-mlhardsigmoidoptions-alpha②\">alpha</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦①\">dataType</a>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlhardsigmoidoptions-beta\" id=\"ref-for-dom-mlhardsigmoidoptions-beta①\">beta</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast⑨\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlhardsigmoidoptions-beta\" id=\"ref-for-dom-mlhardsigmoidoptions-beta②\">beta</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦②\">dataType</a>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand⑤\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③⓪\">operator</a> for the \"hardSigmoid\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②①\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input②⑨\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①⑦\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/hardSwish(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hardswish",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②④\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨⑧\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③②\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②⓪\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧①\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦③\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②⑤\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②③\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand⑥\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③①\">operator</a> for the \"hardSwish\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②②\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③⓪\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①⑧\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/instanceNormalization(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-instancenormalization",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧②\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②⑤\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪①\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②③\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②①\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧③\">this</a> and any of <var>input</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-scale\" id=\"ref-for-dom-mlinstancenormalizationoptions-scale①\">scale</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④⑤\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-bias\" id=\"ref-for-dom-mlinstancenormalizationoptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④⑥\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦④\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②⑥\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②④\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②⑤\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-epsilon\" id=\"ref-for-dom-mlinstancenormalizationoptions-epsilon①\">epsilon</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①⓪\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-epsilon\" id=\"ref-for-dom-mlinstancenormalizationoptions-epsilon②\">epsilon</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦⑤\">dataType</a>.</p>"
        },
        {
          "html": "<p>Let <var>axis</var> be 1 if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-layout\" id=\"ref-for-dom-mlinstancenormalizationoptions-layout①\">layout</a></code> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinputoperandlayout-nchw\" id=\"ref-for-dom-mlinputoperandlayout-nchw①①\">\"nchw\"</a></code>, and 3 otherwise.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-scale\" id=\"ref-for-dom-mlinstancenormalizationoptions-scale②\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④⑦\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦⑥\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦⑦\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤⓪\">shape</a> is not equal to « <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤①\">shape</a>[<var>axis</var>] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-bias\" id=\"ref-for-dom-mlinstancenormalizationoptions-bias②\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④⑧\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦⑧\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑦⑨\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤②\">shape</a> is not equal to « <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤③\">shape</a>[<var>axis</var>] », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③⑨\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand⑦\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③②\">operator</a> for the \"instanceNormalization\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②③\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③①\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-scale\" id=\"ref-for-dom-mlinstancenormalizationoptions-scale③\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④⑨\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③②\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlinstancenormalizationoptions-bias\" id=\"ref-for-dom-mlinstancenormalizationoptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤⓪\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③③\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output①⑨\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/layerNormalization(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-layernormalization",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②⑥\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪⑨\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②④\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②②\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧⑤\">this</a> and any of <var>input</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-scale\" id=\"ref-for-dom-mllayernormalizationoptions-scale①\">scale</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤①\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-bias\" id=\"ref-for-dom-mllayernormalizationoptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤②\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧⓪\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②⑦\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②⑤\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes①\">axes</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤③\">exist</a>, then set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes②\">axes</a></code> to a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⓪\">list</a>, either equal to <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range③\">the range</a> from 1 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②⑥\">rank</a>, exclusive, if <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②⑦\">rank</a> is greater than 1, or an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②①\">list</a> otherwise.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes③\">axes</a></code> contains duplicate values, or if any of its elements is not in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range④\">the range</a> 0 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②⑧\">rank</a>, exclusive, then return failure.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-epsilon\" id=\"ref-for-dom-mllayernormalizationoptions-epsilon①\">epsilon</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①①\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-epsilon\" id=\"ref-for-dom-mllayernormalizationoptions-epsilon②\">epsilon</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧①\">dataType</a>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-scale\" id=\"ref-for-dom-mllayernormalizationoptions-scale②\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤④\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧②\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧③\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank②⑨\">rank</a> is not equal to <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes④\">axes</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②②\">size</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④③\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-bias\" id=\"ref-for-dom-mllayernormalizationoptions-bias②\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤⑤\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧④\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧⑤\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③⓪\">rank</a> is not equal to <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes⑤\">axes</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②③\">size</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑧\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range⑤\">the range</a> 0 to <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes⑥\">axes</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②④\">size</a>, exclusive:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>axis</var> be <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-axes\" id=\"ref-for-dom-mllayernormalizationoptions-axes⑦\">axes</a></code>[<var>index</var>].</p>"
            },
            {
              "html": "<p>If <var>axis</var> is greater or equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③①\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>size</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤④\">shape</a>[<var>axis</var>].</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-scale\" id=\"ref-for-dom-mllayernormalizationoptions-scale③\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤⑥\">exists</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤⑤\">shape</a>[<var>index</var>] is not equal to <var>size</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④⑦\">TypeError</a></code>.</p>"
                }
              ]
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-bias\" id=\"ref-for-dom-mllayernormalizationoptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤⑦\">exists</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤⑥\">shape</a>[<var>index</var>] is not equal to <var>size</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④⑧\">TypeError</a></code>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand⑧\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③③\">operator</a> for the \"layerNormalization\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②④\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③④\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-scale\" id=\"ref-for-dom-mllayernormalizationoptions-scale④\">scale</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤⑧\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③⑤\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllayernormalizationoptions-bias\" id=\"ref-for-dom-mllayernormalizationoptions-bias④\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤⑨\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③⑥\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②⓪\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/leakyRelu(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-leakyrelu",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧⑥\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②⑦\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①⑨\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑤\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②③\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧⑦\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧⑥\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②⑧\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②⑥\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlleakyreluoptions-alpha\" id=\"ref-for-dom-mlleakyreluoptions-alpha①\">alpha</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①②\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlleakyreluoptions-alpha\" id=\"ref-for-dom-mlleakyreluoptions-alpha②\">alpha</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧⑦\">dataType</a>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand⑨\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③④\">operator</a> for the \"leakyRelu\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②⑤\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③⑦\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②①\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/linear(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-linear",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②⑧\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②②\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑥\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②④\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧⑨\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧⑧\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32②⑨\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②⑦\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllinearoptions-alpha\" id=\"ref-for-dom-mllinearoptions-alpha①\">alpha</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①③\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllinearoptions-alpha\" id=\"ref-for-dom-mllinearoptions-alpha②\">alpha</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑧⑨\">dataType</a>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllinearoptions-beta\" id=\"ref-for-dom-mllinearoptions-beta①\">beta</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①④\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllinearoptions-beta\" id=\"ref-for-dom-mllinearoptions-beta②\">beta</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨⓪\">dataType</a>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①⓪\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③⑤\">operator</a> for the \"linear\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②⑥\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③⑧\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②②\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/lstm(input, weight, recurrentWeight, steps, hiddenSize, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-lstm",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot②⑨\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②⑤\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑦\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②⑤\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨①\">this</a> and any of <var>input</var>, <var>weight</var>, <var>recurrentWeight</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-bias\" id=\"ref-for-dom-mllstmoptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥⓪\">exists</a>), <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-recurrentbias\" id=\"ref-for-dom-mllstmoptions-recurrentbias①\">recurrentBias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥①\">exists</a>), <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-peepholeweight\" id=\"ref-for-dom-mllstmoptions-peepholeweight①\">peepholeWeight</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥②\">exists</a>), <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-initialhiddenstate\" id=\"ref-for-dom-mllstmoptions-initialhiddenstate①\">initialHiddenState</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥③\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-initialcellstate\" id=\"ref-for-dom-mllstmoptions-initialcellstate①\">initialCellState</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥④\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>numDirections</var> be 2 if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-direction\" id=\"ref-for-dom-mllstmoptions-direction①\">direction</a></code> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkdirection-both\" id=\"ref-for-dom-mlrecurrentnetworkdirection-both③\">\"both\"</a></code>, or 1 otherwise.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨①\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③⓪\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②⑧\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③②\">rank</a> is not 3, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤⑦\">shape</a>[0] is not equal to <var>steps</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨②\">dataType</a> of either <var>weight</var> or <var>recurrentWeight</var> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨③\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>batchSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤⑧\">shape</a>[1].</p>"
        },
        {
          "html": "<p>Let <var>inputSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑤⑨\">shape</a>[2].</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨④\">dataType</a> of either <var>weight</var> or <var>recurrentWeight</var> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨⑤\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>weight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥⓪\">shape</a> is not equal to « <var>numDirections</var>, 4 * <var>hiddenSize</var>, <var>inputSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>recurrentWeight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥①\">shape</a> is not equal to « <var>numDirections</var>, 4 * <var>hiddenSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>hiddenSize</var> * 8 is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension⑧\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥①\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-bias\" id=\"ref-for-dom-mllstmoptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥⑤\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨⑥\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨⑦\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥②\">shape</a> is not equal to « <var>numDirections</var>, 4 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥③\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-recurrentbias\" id=\"ref-for-dom-mllstmoptions-recurrentbias③\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥⑥\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨⑧\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype⑨⑨\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥③\">shape</a> is not equal to « <var>numDirections</var>, 4 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-peepholeweight\" id=\"ref-for-dom-mllstmoptions-peepholeweight②\">peepholeWeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥⑦\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪⓪\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪①\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥④\">shape</a> is not equal to « <var>numDirections</var>, 3 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-initialhiddenstate\" id=\"ref-for-dom-mllstmoptions-initialhiddenstate②\">initialHiddenState</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥⑧\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪②\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪③\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥⑤\">shape</a> is not equal to « <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥⑨\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-initialcellstate\" id=\"ref-for-dom-mllstmoptions-initialcellstate②\">initialCellState</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥⑨\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪④\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪⑤\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦⓪\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥⑥\">shape</a> is not equal to « <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦①\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-activations\" id=\"ref-for-dom-mllstmoptions-activations①\">activations</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦⓪\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②⑤\">size</a> is not 3, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>activations</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone⑧\">clone</a> of <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-activations\" id=\"ref-for-dom-mllstmoptions-activations②\">activations</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>activations</var> be « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-sigmoid\" id=\"ref-for-dom-mlrecurrentnetworkactivation-sigmoid⑤\">\"sigmoid\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-tanh\" id=\"ref-for-dom-mlrecurrentnetworkactivation-tanh⑥\">\"tanh\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-tanh\" id=\"ref-for-dom-mlrecurrentnetworkactivation-tanh⑦\">\"tanh\"</a></code> ».</p>"
            }
          ]
        },
        {
          "html": "<em>Calculate the output shape:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①③\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪⑥\">dataType</a> and « <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> ».</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-returnsequence\" id=\"ref-for-dom-mllstmoptions-returnsequence②\">returnSequence</a></code> is true:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>desc2</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①④\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪⑦\">dataType</a> and « <var>steps</var>, <var>numDirections</var>, <var>batchSize</var>, <var>hiddenSize</var> ».</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③⑥\">operator</a> for the \"lstm\" operation, given <var>weight</var>, <var>recurrentWeight</var>, <var>steps</var>, <var>hiddenSize</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Let <var>output0</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①⑥\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨②\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>output1</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①⑦\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨③\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-returnsequence\" id=\"ref-for-dom-mllstmoptions-returnsequence③\">returnSequence</a></code> is true:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>output2</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①⑧\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨④\">this</a> and <var>desc2</var>.</p>"
                },
                {
                  "html": "<p>Let <var>output</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②②\">list</a> « <var>output0</var>, <var>output1</var>, <var>output2</var> ».</p>"
                },
                {
                  "html": "<p>Set <var>output0</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②⑦\">[[operator]]</a></code>, <var>output1</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②⑧\">[[operator]]</a></code> and <var>output2</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot②⑨\">[[operator]]</a></code> to <var>operator</var>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>output</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②③\">list</a> « <var>output0</var>, <var>output1</var> ».</p>"
                },
                {
                  "html": "<p>Set <var>output0</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③⓪\">[[operator]]</a></code> and <var>output1</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③①\">[[operator]]</a></code> to <var>operator</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input③⑨\">inputs</a> to <var>input</var>, <var>weight</var>, and <var>recurrentWeight</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-bias\" id=\"ref-for-dom-mllstmoptions-bias④\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦①\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④⓪\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-recurrentbias\" id=\"ref-for-dom-mllstmoptions-recurrentbias④\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦②\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④①\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-peepholeweight\" id=\"ref-for-dom-mllstmoptions-peepholeweight③\">peepholeWeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦③\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④②\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-initialhiddenstate\" id=\"ref-for-dom-mllstmoptions-initialhiddenstate③\">initialHiddenState</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦④\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④③\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmoptions-initialcellstate\" id=\"ref-for-dom-mllstmoptions-initialcellstate③\">initialCellState</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦⑤\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④④\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-activation\" id=\"ref-for-operator-activation⑦\">activation functions</a> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone⑨\">clone</a> of <var>activations</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②③\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/lstmCell(input, weight, recurrentWeight, hiddenState, cellState, hiddenSize, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-lstmcell",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑤\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③⓪\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④⑥\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑧\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②⑥\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑥\">this</a> and any of <var>input</var>, <var>weight</var>, <var>recurrentWeight</var>, <var>hiddenState</var>, <var>cellState</var>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-bias\" id=\"ref-for-dom-mllstmcelloptions-bias①\">bias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦⑥\">exists</a>), <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-recurrentbias\" id=\"ref-for-dom-mllstmcelloptions-recurrentbias①\">recurrentBias</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦⑦\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-peepholeweight\" id=\"ref-for-dom-mllstmcelloptions-peepholeweight①\">peepholeWeight</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦⑧\">exists</a>) returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪⑧\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③①\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16②⑨\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③③\">rank</a> is not equal to 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①⓪⑨\">dataType</a> of any of <var>weight</var>, <var>recurrentWeight</var>, <var>hiddenState</var> or <var>cellState</var> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①⓪\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>batchSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥⑦\">shape</a>[0].</p>"
        },
        {
          "html": "<p>Let <var>inputSize</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥⑧\">shape</a>[1].</p>"
        },
        {
          "html": "<p>If <var>weight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑥⑨\">shape</a> is not equal to « 4 * <var>hiddenSize</var>, <var>inputSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>recurrentWeight</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦⓪\">shape</a> is not equal to « 4 * <var>hiddenSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>hiddenState</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦①\">shape</a> is not equal to « <var>batchSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>cellState</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦②\">shape</a> is not equal to « <var>batchSize</var>, <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>hiddenSize</var> * 8 is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension①⓪\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧①\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-bias\" id=\"ref-for-dom-mllstmcelloptions-bias③\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦⑨\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①①\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①②\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦③\">shape</a> is not equal to « 4 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧③\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-recurrentbias\" id=\"ref-for-dom-mllstmcelloptions-recurrentbias③\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧⓪\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①③\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①④\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦④\">shape</a> is not equal to « 4 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-peepholeweight\" id=\"ref-for-dom-mllstmcelloptions-peepholeweight②\">peepholeWeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧①\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①⑤\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①⑥\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦⑤\">shape</a> is not equal to « 3 * <var>hiddenSize</var> », then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-activations\" id=\"ref-for-dom-mllstmcelloptions-activations①\">activations</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧②\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②⑥\">size</a> is not 3, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>activations</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①⓪\">clone</a> of <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-activations\" id=\"ref-for-dom-mllstmcelloptions-activations②\">activations</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>activations</var> be « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-sigmoid\" id=\"ref-for-dom-mlrecurrentnetworkactivation-sigmoid⑦\">\"sigmoid\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-tanh\" id=\"ref-for-dom-mlrecurrentnetworkactivation-tanh①⓪\">\"tanh\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlrecurrentnetworkactivation-tanh\" id=\"ref-for-dom-mlrecurrentnetworkactivation-tanh①①\">\"tanh\"</a></code> ».</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>desc</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dictdef-mloperanddescriptor\" id=\"ref-for-dictdef-mloperanddescriptor①⑧\">MLOperandDescriptor</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape①⓪\">shape</a></code> to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②④\">list</a> « <var>batchSize</var>, <var>hiddenSize</var> ».</p>"
        },
        {
          "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-datatype\" id=\"ref-for-dom-mloperanddescriptor-datatype⑤\">dataType</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①⑦\">dataType</a>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output0</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand①⑨\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑦\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>output1</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②⓪\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑧\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>output</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑤\">list</a> « <var>output0</var>, <var>output1</var> ».</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③⑦\">operator</a> for the \"lstmCell\" operation, given <var>weight</var>, <var>recurrentWeight</var>, <var>hiddenState</var>, <var>cellState</var>, <var>hiddenSize</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output0</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③②\">[[operator]]</a></code> and <var>output1</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③③\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④⑤\">inputs</a> to <var>input</var>, <var>weight</var>, <var>recurrentWeight</var>, <var>hiddenState</var>, and <var>cellState</var>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-bias\" id=\"ref-for-dom-mllstmcelloptions-bias④\">bias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧③\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④⑥\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-recurrentbias\" id=\"ref-for-dom-mllstmcelloptions-recurrentbias④\">recurrentBias</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧④\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④⑦\">inputs</a>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mllstmcelloptions-peepholeweight\" id=\"ref-for-dom-mllstmcelloptions-peepholeweight③\">peepholeWeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧⑤\">exists</a>, then add it to <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④⑧\">inputs</a>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-activation\" id=\"ref-for-operator-activation⑨\">activation functions</a> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①①\">clone</a> of <var>activations</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②④\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate matmul output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-matmul-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>shapeA</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①②\">clone</a> of <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦⑥\">shape</a>.</p>"
        },
        {
          "html": "<p>Let <var>rankA</var> be <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③⑤\">rank</a>.</p>"
        },
        {
          "html": "<p>Let <var>shapeB</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①③\">clone</a> of <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦⑦\">shape</a>.</p>"
        },
        {
          "html": "<p>Let <var>rankB</var> be <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③⑥\">rank</a>.</p>"
        },
        {
          "html": "<p>If either <var>rankA</var> or <var>rankB</var> is less than 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>colsA</var> be <var>shapeA</var>[<var>rankA</var> - 1].</p>"
        },
        {
          "html": "<p>Let <var>rowsA</var> be <var>shapeA</var>[<var>rankA</var> - 2].</p>"
        },
        {
          "html": "<p>Let <var>colsB</var> be <var>shapeB</var>[<var>rankB</var> - 1].</p>"
        },
        {
          "html": "<p>Let <var>rowsB</var> be <var>shapeB</var>[<var>rankB</var> - 2].</p>"
        },
        {
          "html": "<p>If <var>colsA</var> is not equal to <var>rowsB</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>batchShapeA</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①④\">clone</a> of <var>shapeA</var> with the spatial dimensions (last 2 items) <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove\">removed</a>.</p>"
        },
        {
          "html": "<p>Let <var>batchShapeB</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①⑤\">clone</a> of <var>shapeB</var> with the spatial dimensions (last 2 items) <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove①\">removed</a>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting\" id=\"ref-for-bidirectionally-broadcasting②\">bidirectionally broadcasting</a> <var>batchShapeA</var> and <var>batchShapeB</var>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append\">Append</a> « <var>rowsA</var>, <var>colsB</var> » to <var>outputShape</var>.</p>"
        },
        {
          "html": "<p>Return <var>outputShape</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/matmul(a, b, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-matmul",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑨\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③①\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥⑥\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑨\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②⑦\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⓪\">this</a> and any of <var>a</var> and <var>b</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①⑧\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③②\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③⓪\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>b</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①①⑨\">dataType</a> is not equal to <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②⓪\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨④\">TypeError</a></code>.</p>"
        },
        {
          "html": "Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-matmul-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-matmul-output-sizes\">calculating matmul output sizes</a> given <var>a</var> and <var>b</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that throws an error, re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦⓪\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①⑤\">creating an MLOperandDescriptor</a> given <var>a</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②①\">dataType</a> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②①\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪①\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③⑧\">operator</a> for the \"matmul\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③④\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input④⑨\">inputs</a> to <var>a</var> and <var>b</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②⑤\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate padding output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-padding-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>shape</var> be a copy of <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦⑧\">shape</a>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑨\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range⑥\">the range</a> 0 to <var>shape</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank③⑨\">rank</a>, exclusive:",
          "rationale": "add",
          "steps": [
            {
              "html": "<p>Add to <var>shape</var>[<var>index</var>] the value of <var>beginningPadding</var>[<var>index</var>].</p>"
            },
            {
              "html": "<p>Add to <var>shape</var>[<var>index</var>] the value of <var>endingPadding</var>[<var>index</var>].</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>shape</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/pad(input, beginningPadding, endingPadding, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-pad",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪②\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③②\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦①\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⓪\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②⑧\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪③\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank④⓪\">rank</a> is 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>beginningPadding</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②⑦\">size</a> and <var>endingPadding</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②⑧\">size</a> are not both equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank④①\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be a copy of <var>input</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot⑧\">[[descriptor]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-padding-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-padding-output-sizes\">calculating padding output sizes</a> given <var>input</var>, <var>beginningPadding</var> and <var>endingPadding</var>.</p>"
        },
        {
          "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item③\">item</a> in <var>outputShape</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension①②\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpadoptions-value\" id=\"ref-for-dom-mlpadoptions-value①\">value</a></code> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#cast\" id=\"ref-for-cast①⑤\">casting</a> <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpadoptions-value\" id=\"ref-for-dom-mlpadoptions-value②\">value</a></code> to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②②\">dataType</a>.</p>"
        },
        {
          "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape①①\">shape</a></code> to <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②②\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪④\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators③⑨\">operator</a> for the \"padding\" operation, given <var>beginningPadding</var>, <var>endingPadding</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③⑤\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤⓪\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②⑥\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate pool2d output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-pool2d-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Switch on <var>layout</var>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "\"nchw\"",
                  "html": "<p>Let « <var>batches</var>, <var>channels</var>, <var>inputHeight</var>, <var>inputWidth</var> » be <var>inputShape</var>.</p>"
                },
                {
                  "case": "\"nhwc\"",
                  "html": "<p>Let « <var>batches</var>, <var>inputHeight</var>, <var>inputWidth</var>, <var>channels</var> » be <var>inputShape</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>If <var>outputSizes</var> is given, then let « <var>outputHeight</var>, <var>outputWidth</var> » be <var>outputSizes</var>.</p>"
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>outputSizes</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-conv2d-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-conv2d-output-sizes①\">calculating conv2d output sizes</a> given <var>inputHeight</var>, <var>inputWidth</var>, <var>windowDimensions</var>[0], <var>windowDimensions</var>[1], <var>padding</var>, <var>strides</var>, and <var>dilations</var>.</p>"
            },
            {
              "html": "<p>Let « <var>outputHeight</var>, <var>outputWidth</var> » be <var>outputSizes</var>.</p>"
            },
            {
              "html": "Switch on <var>roundingType</var>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "\"floor\"",
                      "html": "",
                      "rationale": "set",
                      "steps": [
                        {
                          "html": "<p>Set <var>outputWidth</var> to floor(<var>outputWidth</var>).</p>"
                        },
                        {
                          "html": "<p>Set <var>outputHeight</var> to floor(<var>outputHeight</var>).</p>"
                        }
                      ]
                    },
                    {
                      "case": "\"ceil\"",
                      "html": "",
                      "rationale": "set",
                      "steps": [
                        {
                          "html": "<p>Set <var>outputWidth</var> to ceiling(<var>outputWidth</var>).</p>"
                        },
                        {
                          "html": "<p>Set <var>outputHeight</var> to ceiling(<var>outputHeight</var>).</p>"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "Switch on <var>layout</var>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "\"nchw\"",
                  "html": "<p>Return « <var>batches</var>, <var>channels</var>, <var>outputHeight</var>, <var>outputWidth</var> ».</p>"
                },
                {
                  "case": "\"nhwc\"",
                  "html": "<p>Return « <var>batches</var>, <var>outputHeight</var>, <var>outputWidth</var>, <var>channels</var> ».</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "MLGraphBuilder/pooling-op",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-pooling-op",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑤\">Assert</a>: <var>op</var> is one of \"averagePool2d\", \"l2Pool2d\", \"maxPool2d\".</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑤\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③③\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦⑥\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③①\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand②⑨\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑥\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>allowedDataTypes</var> is given and it does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain①\">contain</a> <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②③\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank④②\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-windowdimensions\" id=\"ref-for-dom-mlpool2doptions-windowdimensions①\">windowDimensions</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧⑥\">exists</a> and its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②⑨\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Otherwise, set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-windowdimensions\" id=\"ref-for-dom-mlpool2doptions-windowdimensions②\">windowDimensions</a></code> to the height and width dimensions of the shape of <var>input</var>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-outputsizes\" id=\"ref-for-dom-mlpool2doptions-outputsizes①\">outputSizes</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧⑦\">exists</a>, or if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-padding\" id=\"ref-for-dom-mlpool2doptions-padding①\">padding</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧⑧\">exist</a>, set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-padding\" id=\"ref-for-dom-mlpool2doptions-padding②\">padding</a></code> to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③④\">list</a> « 0, 0, 0, 0 ».</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-padding\" id=\"ref-for-dom-mlpool2doptions-padding③\">padding</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③⓪\">size</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-strides\" id=\"ref-for-dom-mlpool2doptions-strides①\">strides</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧⑨\">exist</a>, set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-strides\" id=\"ref-for-dom-mlpool2doptions-strides②\">strides</a></code> to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑤\">list</a> « 1, 1 ».</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-strides\" id=\"ref-for-dom-mlpool2doptions-strides③\">strides</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③①\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any value in <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-strides\" id=\"ref-for-dom-mlpool2doptions-strides④\">strides</a></code> is not greater than 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-outputsizes\" id=\"ref-for-dom-mlpool2doptions-outputsizes②\">outputSizes</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨⓪\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③②\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its elements are not smaller than the elements at the same dimension (index) for <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-strides\" id=\"ref-for-dom-mlpool2doptions-strides⑤\">strides</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪⑦\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-dilations\" id=\"ref-for-dom-mlpool2doptions-dilations①\">dilations</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨①\">exist</a>, set <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-dilations\" id=\"ref-for-dom-mlpool2doptions-dilations②\">dilations</a></code> to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑥\">list</a> « 1, 1 ».</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-dilations\" id=\"ref-for-dom-mlpool2doptions-dilations③\">dilations</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③③\">size</a> is not 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any value in <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-dilations\" id=\"ref-for-dom-mlpool2doptions-dilations④\">dilations</a></code> is not greater than 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be a copy of <var>input</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot⑨\">[[descriptor]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-pool2d-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-pool2d-output-sizes\">calculating pool2d output sizes</a> given <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-layout\" id=\"ref-for-dom-mlpool2doptions-layout①\">layout</a></code>, <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑦⑨\">shape</a>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-roundingtype\" id=\"ref-for-dom-mlpool2doptions-roundingtype②\">roundingType</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-windowdimensions\" id=\"ref-for-dom-mlpool2doptions-windowdimensions③\">windowDimensions</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-padding\" id=\"ref-for-dom-mlpool2doptions-padding④\">padding</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-strides\" id=\"ref-for-dom-mlpool2doptions-strides⑥\">strides</a></code>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-dilations\" id=\"ref-for-dom-mlpool2doptions-dilations⑤\">dilations</a></code>, and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlpool2doptions-outputsizes\" id=\"ref-for-dom-mlpool2doptions-outputsizes③\">outputSizes</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨②\">exists</a>).</p>"
        },
        {
          "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item④\">item</a> in <var>outputShape</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension①③\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape①②\">shape</a></code> to <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②③\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑦\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④⓪\">operator</a> for the <var>op</var> operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③⑥\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤①\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②⑦\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/averagePool2d(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-averagepool2d",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"averagePool2d(input, options)|averagePool2d(input)\" id=\"dom-mlgraphbuilder-averagepool2d\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>averagePool2d(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-pooling-op\" id=\"ref-for-mlgraphbuilder-pooling-op\"> create pooling operation</a> given \"averagePool2d\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③③\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③①\">\"float16\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑧⑨\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨⓪\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/l2Pool2d(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-l2pool2d",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"l2Pool2d(input, options)|l2Pool2d(input)\" id=\"dom-mlgraphbuilder-l2pool2d\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>l2Pool2d(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-pooling-op\" id=\"ref-for-mlgraphbuilder-pooling-op①\"> create pooling operation</a> given \"l2Pool2d\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③④\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③②\">\"float16\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨①\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨②\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/maxPool2d(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-maxpool2d",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"maxPool2d(input, options)|maxPool2d(input)\" id=\"dom-mlgraphbuilder-maxpool2d\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>maxPool2d(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-pooling-op\" id=\"ref-for-mlgraphbuilder-pooling-op②\"> create pooling operation</a> given \"maxPool2d\", <var>input</var> and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨③\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨④\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/prelu(input, slope, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-prelu",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③④\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨⑤\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④②\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③⓪\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑨\">this</a> and any of <var>input</var> and <var>slope</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②④\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③⑤\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③③\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32⑥\">\"int32\"</a></code>, or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int8\" id=\"ref-for-dom-mloperanddatatype-int8⑥\">\"int8\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>slope</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②⑤\">dataType</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②⑥\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①③\">TypeError</a></code>.</p>"
        },
        {
          "html": "Let <var>outputShape</var> be to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting\" id=\"ref-for-bidirectionally-broadcasting③\">bidirectionally broadcasting</a> <var>slope</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧⓪\">shape</a> and <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧①\">shape</a>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑨⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①④\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>descriptor</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①⑥\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②⑦\">dataType</a> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②④\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⓪\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④①\">operator</a> for the \"prelu\" operation, given <var>slope</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③⑦\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤②\">inputs</a> to <var>input</var> and <var>slope</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②⑧\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate reduction output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-reduction-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>inputRank</var> be <var>inputShape</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③④\">size</a>.</p>"
        },
        {
          "html": "<p>If <var>axes</var> is not given, let <var>axes</var> be <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range⑦\">the range</a> 0 to <var>inputRank</var>, exclusive.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>axes</var> contains duplicate values, or if any of its elements is not in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range⑧\">the range</a> 0 to <var>inputRank</var>, exclusive, then return failure.</p>"
        },
        {
          "html": "If <var>keepDimensions</var> is true, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>outputShape</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①⑥\">clone</a> of <var>inputShape</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⓪\">For each</a> <var>axis</var> of <var>axes</var>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>outputShape</var>[<var>axis</var>] to 1.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>outputShape</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④⓪\">list</a>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①①\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range⑨\">the range</a> 0 to <var>inputRank</var>, exclusive:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>axes</var> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain②\">contain</a> <var>index</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①\">append</a> <var>inputShape</var>[<var>index</var>].</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>outputShape</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/create reduction operation",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑥\">Assert</a>: <var>op</var> is one of \"reduceL1\", \"reduceL2\", \"reduceLogSum\", \"reduceLogSumExp\", \"reduceMax\", \"reduceMean\", \"reduceMin\", \"reduceProduct\", \"reduceSum\", \"reduceSumSquare\".</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①①\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③⑤\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪⓪\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③③\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③①\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①②\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>allowedDataTypes</var> is given and it does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain③\">contain</a> <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②⑧\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-reduction-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-reduction-output-sizes①\">calculating reduction output sizes</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧②\">shape</a>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlreduceoptions-axes\" id=\"ref-for-dom-mlreduceoptions-axes②\">axes</a></code> (if it <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨③\">exists</a>), and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlreduceoptions-keepdimensions\" id=\"ref-for-dom-mlreduceoptions-keepdimensions②\">keepDimensions</a></code>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①⑦\">creating an MLOperandDescriptor</a> given <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①②⑨\">dataType</a> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②⑤\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①③\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④②\">operator</a> for the <var>op</var> operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③⑧\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤③\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output②⑨\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceL1(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducel1",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceL1(input, options)|reduceL1(input)\" id=\"dom-mlgraphbuilder-reducel1\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceL1(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation\">creating reduction operation</a> given \"reduceL1\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③⑥\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③④\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32⑦\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint32\" id=\"ref-for-dom-mloperanddatatype-uint32⑤\">\"uint32\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪④\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪⑤\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceL2(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducel2",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceL2(input, options)|reduceL2(input)\" id=\"dom-mlgraphbuilder-reducel2\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceL2(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation①\">creating reduction operation</a> given \"reduceL2\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③⑦\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③⑤\">\"float16\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪⑥\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪⑦\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceLogSum(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducelogsum",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceLogSum(input, options)|reduceLogSum(input)\" id=\"dom-mlgraphbuilder-reducelogsum\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceLogSum(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation②\">creating reduction operation</a> given \"reduceLogSum\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③⑧\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③⑥\">\"float16\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪⑧\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⓪⑨\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceLogSumExp(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducelogsumexp",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceLogSumExp(input, options)|reduceLogSumExp(input)\" id=\"dom-mlgraphbuilder-reducelogsumexp\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceLogSumExp(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation③\">creating reduction operation</a> given \"reduceLogSumExp\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32③⑨\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③⑦\">\"float16\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①⓪\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①①\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceMax(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducemax",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceMax(input, options)|reduceMax(input)\" id=\"dom-mlgraphbuilder-reducemax\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceMax(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation④\">creating reduction operation</a> given \"reduceMax\", <var>input</var> and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①②\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①③\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceMean(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducemean",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceMean(input, options)|reduceMean(input)\" id=\"dom-mlgraphbuilder-reducemean\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceMean(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation⑤\">creating reduction operation</a> given \"reduceMean\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④⓪\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③⑧\">\"float16\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①④\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①⑤\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceMin(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducemin",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceMin(input, options)|reduceMin(input)\" id=\"dom-mlgraphbuilder-reducemin\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceMin(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation⑥\">creating reduction operation</a> given \"reduceMin\", <var>input</var> and <var>options</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①⑥\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①⑦\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceProduct(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reduceproduct",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceProduct(input, options)|reduceProduct(input)\" id=\"dom-mlgraphbuilder-reduceproduct\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceProduct(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation⑦\">creating reduction operation</a> given \"reduceProduct\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④①\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16③⑨\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32⑧\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint32\" id=\"ref-for-dom-mloperanddatatype-uint32⑥\">\"uint32\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①⑧\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③①⑨\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceSum(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducesum",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceSum(input, options)|reduceSum(input)\" id=\"dom-mlgraphbuilder-reducesum\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceSum(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation⑧\">creating reduction operation</a> given \"reduceSum\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④②\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④⓪\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32⑨\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint32\" id=\"ref-for-dom-mloperanddatatype-uint32⑦\">\"uint32\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②⓪\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②①\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reduceSumSquare(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reducesumsquare",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MLGraphBuilder\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"reduceSumSquare(input, options)|reduceSumSquare(input)\" id=\"dom-mlgraphbuilder-reducesumsquare\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>reduceSumSquare(<var>input</var>, <var>options</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-create-reduction-operation\" id=\"ref-for-mlgraphbuilder-create-reduction-operation⑨\">creating reduction operation</a> given \"reduceSumSquare\", <var>input</var>, <var>options</var>, and « <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④③\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④①\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32①⓪\">\"int32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint32\" id=\"ref-for-dom-mloperanddatatype-uint32⑧\">\"uint32\"</a></code> ».",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②②\">throws</a> an error, then re-<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②③\">throw</a> the error.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/relu(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-relu",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③⑥\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②④\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③④\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③②\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑤\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③⓪\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④④\">\"float32\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④②\">\"float16\"</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int32\" id=\"ref-for-dom-mloperanddatatype-int32①①\">\"int32\"</a></code>, or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-int8\" id=\"ref-for-dom-mloperanddatatype-int8⑦\">\"int8\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①①\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④③\">operator</a> for the \"relu\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot③⑨\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤④\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③⓪\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/check resample options",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-check-resample-options",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-scales\" id=\"ref-for-dom-mlresample2doptions-scales②\">scales</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨④\">exist</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④②\">list</a> « 1.0, 1.0 ».</p>"
        },
        {
          "html": "<p>Otherwise, if any of its values is not greater than 0, or if its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③⑤\">size</a> is not 2, return false.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-sizes\" id=\"ref-for-dom-mlresample2doptions-sizes①\">sizes</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨⑤\">exists</a>, and if its size is not 2, or if any of its values is not greater than 0, return false.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-axes\" id=\"ref-for-dom-mlresample2doptions-axes③\">axes</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨⑥\">exists</a>, set it to the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④③\">list</a> « 2, 3 ».</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-axes\" id=\"ref-for-dom-mlresample2doptions-axes④\">axes</a></code> contains duplicate values, or if any of its elements is not in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①⓪\">the range</a> 0 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank④⑥\">rank</a>, exclusive, then return false.</p>"
        },
        {
          "html": "<p>Return true.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/calculate resample output sizes",
      "href": "https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-resample-output-sizes",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>inputDescriptor</var> be <var>input</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot①⓪\">[[descriptor]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①⑦\">clone</a> of <var>inputDescriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape①③\">shape</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①②\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①①\">the range</a> 0 to <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-axes\" id=\"ref-for-dom-mlresample2doptions-axes⑤\">axes</a></code>'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③⑥\">size</a>, exclusive:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-sizes\" id=\"ref-for-dom-mlresample2doptions-sizes②\">sizes</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨⑦\">exists</a>, then let <var>size</var> be <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-sizes\" id=\"ref-for-dom-mlresample2doptions-sizes③\">sizes</a></code>[<var>index</var>].</p>"
            },
            {
              "html": "<p>Otherwise, let <var>size</var> be floor(<var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧③\">shape</a>[<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-axes\" id=\"ref-for-dom-mlresample2doptions-axes⑥\">axes</a></code>[<var>index</var>]] * <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-scales\" id=\"ref-for-dom-mlresample2doptions-scales③\">scales</a></code>[<var>index</var>]).</p>"
            },
            {
              "html": "<p>If <var>size</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension①④\">valid dimension</a>, then return failure.</p>"
            },
            {
              "html": "<p>Set <var>outputShape</var>[<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlresample2doptions-axes\" id=\"ref-for-dom-mlresample2doptions-axes⑦\">axes</a></code>[<var>index</var>]] to <var>size</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①⑧\">creating an MLOperandDescriptor</a> given <var>inputDescriptor</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-datatype\" id=\"ref-for-dom-mloperanddescriptor-datatype⑥\">dataType</a></code> and <var>outputShape</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/resample2d(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-resample2d",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑥\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③⑦\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⑤\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③③\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑦\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③①\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④⑤\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④③\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③②⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank④⑦\">rank</a> is not 4, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-check-resample-options\" id=\"ref-for-mlgraphbuilder-check-resample-options\">checking resample options</a> given <var>options</var> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-calculate-resample-output-sizes\" id=\"ref-for-mlgraphbuilder-calculate-resample-output-sizes\">calculating resample output sizes</a> given <var>input</var> and <var>options</var>. If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②⑥\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑧\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④④\">operator</a> for the \"resample2d\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④⓪\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤⑤\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③①\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/reshape(input, newShape, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-reshape",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑨\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③⑧\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③③\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⑥\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③④\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②⓪\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be an empty array of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑤③\">unsigned long</a></code>.</p>"
        },
        {
          "html": "<p>If <var>newShape</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③⑦\">size</a> is 0, set <var>outputShape</var> to an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④④\">list</a> for a scalar.</p>"
        },
        {
          "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑤\">item</a> in <var>newShape</var> is not a <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#valid-dimension\" id=\"ref-for-valid-dimension①⑤\">valid dimension</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>inputElementCount</var> be the product of all elements in <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧④\">shape</a>. Empty dimensions yield an <var>inputElementCount</var> of 1.</p>"
        },
        {
          "html": "<p>If product of all values in <var>newShape</var> is not equal to <var>inputElementCount</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>desc</var> be a copy of <var>input</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-descriptor-slot\" id=\"ref-for-dom-mloperand-descriptor-slot①①\">[[descriptor]]</a></code>.</p>"
        },
        {
          "html": "<p>Set <var>desc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddescriptor-shape\" id=\"ref-for-dom-mloperanddescriptor-shape①④\">shape</a></code> to <var>newShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②⑦\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②①\">this</a> and <var>desc</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④⑤\">operator</a> for the \"reshape\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④①\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤⑥\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③②\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/sigmoid(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-sigmoid",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②②\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot③⑨\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⑦\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③⑤\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②③\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③②\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④⑥\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④④\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③③⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①②\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④⑥\">operator</a> for the \"sigmoid\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④②\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤⑦\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③③\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/slice(input, starts, sizes, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-slice",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④⓪\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④⓪\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⑧\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③⑥\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②⑤\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If any of <var>sizes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑥\">items</a> are 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>starts</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③⑧\">size</a> and <var>sizes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③⑨\">size</a> are not both equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤⓪\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①③\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①②\">the range</a> 0 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤①\">rank</a>, exclusive:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>sizes</var>[<var>index</var>] is 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③③\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>starts</var>[<var>index</var>] is greater than or equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧⑤\">shape</a>[<var>index</var>], then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>starts</var>[<var>index</var>] + <var>sizes</var>[<var>index</var>] is greater than <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧⑥\">shape</a>[<var>index</var>], then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①③\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④⑦\">operator</a> for the \"slice\" operation, given <var>starts</var>, <var>sizes</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④③\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤⑧\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③④\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/softmax(input, axis, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-softmax",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②⑥\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④①\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⑨\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③⑦\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②⑦\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③③\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④⑦\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④⑤\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③④⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>axis</var> is greater than or equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤②\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①④\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④⑧\">operator</a> for the \"softmax\" operation, given <var>axis</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④④\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑤⑨\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③⑤\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/softplus(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-softplus",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④②\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤①\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④⓪\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③⑧\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②⑨\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③④\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④⑧\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④⑥\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①⑤\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators④⑨\">operator</a> for the \"softplus\" operation and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④⑤\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥⓪\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③⑥\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/softsign(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-softsign",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④③\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤④\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④①\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand③⑨\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③①\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③⑤\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32④⑨\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④⑦\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①⑥\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators⑤⓪\">operator</a> for the \"softsign\" operation and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④⑥\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥①\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③⑦\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/split(input, splits, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-split",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③②\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④④\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤⑦\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤②\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand④⓪\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③③\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>axis</var> be <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlsplitoptions-axis\" id=\"ref-for-dom-mlsplitoptions-axis①\">axis</a></code>.</p>"
        },
        {
          "html": "<p>If <var>axis</var> is greater than or equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤④\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④④\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>splits</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑦⓪\">unsigned long</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧⑦\">shape</a>[<var>axis</var>] % <var>splits</var> is not 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④⑤\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, let <var>splitCount</var> be <var>splits</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>splits</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-sequence\" id=\"ref-for-idl-sequence⑤⓪\">sequence</a>&lt;<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑦①\">unsigned long</a></code>&gt;:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If any of its elements is equal to 0, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If the sum of its elements is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧⑧\">shape</a>[<var>axis</var>], then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④⑦\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, let <var>splitCount</var> be <var>splits</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④③\">size</a>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators⑤①\">operator</a> for the \"split\" operation, given <var>splits</var> and <var>options</var>.</p>"
            },
            {
              "html": "<p>Let <var>outputs</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④⑤\">list</a>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①④\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①③\">the range</a> 0 to <var>splitCount</var>, exclusive:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>operand</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①⑦\">copying an MLOperand</a> given <var>input</var>.</p>"
                },
                {
                  "html": "<p>If <var>splits</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑦②\">unsigned long</a></code>, then let <var>newDimension</var> be <var>operand</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑧⑨\">shape</a>[<var>axis</var>] / <var>splits</var>.</p>"
                },
                {
                  "html": "<p>Otherwise, let <var>newDimension</var> be <var>splits</var>[<var>index</var>].</p>"
                },
                {
                  "html": "<p>Set <var>operand</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑨⓪\">shape</a>[<var>axis</var>] to <var>newDimension</var>.</p>"
                },
                {
                  "html": "<p>Set <var>operand</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④⑦\">[[operator]]</a></code> to <var>operator</var>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append②\">Append</a> <var>operand</var> to <var>outputs</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥②\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③⑧\">outputs</a> to <var>outputs</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>outputs</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/tanh(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-tanh",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③④\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④⑤\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥③\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④③\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand④①\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑤\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③⑥\">dataType</a> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float32\" id=\"ref-for-dom-mloperanddatatype-float32⑤⓪\">\"float32\"</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-float16\" id=\"ref-for-dom-mloperanddatatype-float16④⑧\">\"float16\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①⑧\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators⑤②\">operator</a> for the \"tanh\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④⑧\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥③\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output③⑨\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/transpose(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-transpose",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑥\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④⑥\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥⑥\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④④\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand④②\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑦\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mltransposeoptions-permutation\" id=\"ref-for-dom-mltransposeoptions-permutation①\">permutation</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨⑧\">exist</a>, let <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mltransposeoptions-permutation\" id=\"ref-for-dom-mltransposeoptions-permutation②\">permutation</a></code> be the reversed sequence of all indices for <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑨①\">shape</a>.</p>"
        },
        {
          "html": "Otherwise if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mltransposeoptions-permutation\" id=\"ref-for-dom-mltransposeoptions-permutation③\">permutation</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨⑨\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④④\">size</a> is not equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤⑦\">rank</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If its values are not in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①④\">the range</a> 0 to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤⑧\">rank</a> exclusive, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If it contains duplicate values, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤③\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand①⑨\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators⑤③\">operator</a> for the \"transpose\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot④⑨\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥④\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output④⓪\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/triangular(input, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-triangular",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑧\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④⑦\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦①\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④⑤\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand④③\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑨\">this</a> and <var>input</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-rank\" id=\"ref-for-mloperand-rank⑤⑨\">rank</a> is less than 2, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#copy-an-mloperand\" id=\"ref-for-copy-an-mloperand②⓪\">copying an MLOperand</a> given <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators⑤④\">operator</a> for the \"triangular\" operation, given <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑤⓪\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥⑤\">input</a> to <var>input</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output④①\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "MLGraphBuilder/where(condition, trueValue, falseValue, options)",
      "href": "https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-where",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④⓪\">this</a>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mlgraphbuilder-hasbuilt-slot\" id=\"ref-for-dom-mlgraphbuilder-hasbuilt-slot④⑧\">[[hasBuilt]]</a></code> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦④\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④⑥\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mlgraphbuilder-validate-operand\" id=\"ref-for-mlgraphbuilder-validate-operand④④\">validating operand</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④①\">this</a> and any of <var>condition</var>, <var>trueValue</var>, and <var>falseValue</var> returns false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>condition</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③⑦\">dataType</a> is not equal to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperanddatatype-uint8\" id=\"ref-for-dom-mloperanddatatype-uint8⑦\">\"uint8\"</a></code>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>trueValue</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③⑧\">dataType</a> is not equal to <var>falseValue</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①③⑨\">dataType</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "Let <var>outputShape</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting\" id=\"ref-for-bidirectionally-broadcasting④\">bidirectionally broadcasting</a> <var>trueValue</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑨②\">shape</a> and <var>falseValue</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑨③\">shape</a>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤⑨\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Set <var>outputShape</var> to the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting\" id=\"ref-for-bidirectionally-broadcasting⑤\">bidirectionally broadcasting</a> <var>condition</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-shape\" id=\"ref-for-mloperand-shape⑨④\">shape</a> and |outputShape].",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If that returns failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑥⓪\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>descriptor</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperanddescriptor\" id=\"ref-for-create-an-mloperanddescriptor①⑨\">creating an MLOperandDescriptor</a> given <var>trueValue</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#mloperand-datatype\" id=\"ref-for-mloperand-datatype①④⓪\">dataType</a> and <var>outputShape</var>.</p>"
        },
        {
          "html": "<em>Make graph connections:</em>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>output</var> be the result of <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#create-an-mloperand\" id=\"ref-for-create-an-mloperand②⑧\">creating an MLOperand</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④②\">this</a> and <var>descriptor</var>.</p>"
            },
            {
              "html": "<p>Let <var>operator</var> be an <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operators\" id=\"ref-for-operators⑤⑤\">operator</a> for the \"where\" operation, given <var>condition</var>, <var>trueValue</var>, <var>falseValue</var>, and <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>output</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webmachinelearning.github.io/webnn/#dom-mloperand-operator-slot\" id=\"ref-for-dom-mloperand-operator-slot⑤①\">[[operator]]</a></code> to <var>operator</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-input\" id=\"ref-for-operator-input⑥⑥\">inputs</a> to <var>condition</var>, <var>trueValue</var> and <var>falseValue</var>.</p>"
            },
            {
              "html": "<p>Set <var>operator</var>’s <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#operator-output\" id=\"ref-for-operator-output④②\">output</a> to <var>output</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>output</var>.</p>"
        }
      ]
    },
    {
      "name": "unidirectionally broadcasting",
      "href": "https://webmachinelearning.github.io/webnn/#unidirectionally-broadcasting",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>sizeFrom</var> be <var>shapeFrom</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④⑤\">size</a>.</p>"
        },
        {
          "html": "<p>Let <var>sizeTo</var> be <var>shapeTo</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④⑥\">size</a>.</p>"
        },
        {
          "html": "<p>If <var>sizeFrom</var> &gt; <var>sizeTo</var>, then return failure.</p>"
        },
        {
          "html": "<p>Let <var>paddedShapeFrom</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①⑧\">clone</a> of <var>shapeFrom</var>.</p>"
        },
        {
          "html": "<p>While <var>paddedShapeFrom</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④⑦\">size</a> is less than <var>sizeTo</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-prepend\" id=\"ref-for-list-prepend\">prepend</a> 1 to <var>paddedShapeFrom</var>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④⑧\">list</a>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑤\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①⑤\">the range</a> 0 to <var>sizeTo</var>, exclusive:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>dimFrom</var> be <var>paddedShapeFrom</var>[<var>index</var>].</p>"
            },
            {
              "html": "<p>Let <var>dimTo</var> be <var>shapeTo</var>[<var>index</var>].</p>"
            },
            {
              "html": "<p>If <var>dimTo</var> is not equal to <var>dimFrom</var> and <var>dimFrom</var> is not equal to 1, then return failure.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append③\">Append</a> <var>dimTo</var> to <var>outputShape</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>outputShape</var>.</p>"
        }
      ]
    },
    {
      "name": "bidirectionally broadcasting",
      "href": "https://webmachinelearning.github.io/webnn/#bidirectionally-broadcasting",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>sizeA</var> be <var>shapeA</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④⑧\">size</a>.</p>"
        },
        {
          "html": "<p>Let <var>sizeB</var> be <var>shapeB</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④⑨\">size</a>.</p>"
        },
        {
          "html": "<p>Let <var>outputSize</var> be the maximum of <var>sizeA</var> and <var>sizeB</var>.</p>"
        },
        {
          "html": "<p>Let <var>paddedA</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①⑨\">clone</a> of <var>shapeA</var>.</p>"
        },
        {
          "html": "<p>While <var>paddedA</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑤⓪\">size</a> is less than <var>outputSize</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-prepend\" id=\"ref-for-list-prepend①\">prepend</a> 1 to <var>paddedA</var>.</p>"
        },
        {
          "html": "<p>Let <var>paddedB</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone②⓪\">clone</a> of <var>shapeB</var>.</p>"
        },
        {
          "html": "<p>While <var>paddedB</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑤①\">size</a> is less than <var>outputSize</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-prepend\" id=\"ref-for-list-prepend②\">prepend</a> 1 to <var>paddedB</var>.</p>"
        },
        {
          "html": "<p>Let <var>outputShape</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤①\">list</a>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑥\">For each</a> <var>index</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①⑥\">the range</a> 0 to <var>outputSize</var>, exclusive:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>dimA</var> be <var>paddedA</var>[<var>index</var>].</p>"
            },
            {
              "html": "<p>Let <var>dimB</var> be <var>paddedB</var>[<var>index</var>].</p>"
            },
            {
              "html": "<p>If <var>dimA</var> is not equal to <var>dimB</var>, and <var>dimA</var> is not equal to 1, and <var>dimB</var> is not equal to 1, then return failure.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append④\">Append</a> the maximum of <var>dimA</var> and <var>dimB</var> to <var>outputShape</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>outputShape</var>.</p>"
        }
      ]
    },
    {
      "name": "cast",
      "href": "https://webmachinelearning.github.io/webnn/#cast",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Switch on <var>dataType</var>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "\"float32\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttofloat\" id=\"ref-for-converttofloat\">ConvertToFloat</a>(<var>x</var>, 32).</p>"
                },
                {
                  "case": "\"float16\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttofloat\" id=\"ref-for-converttofloat①\">ConvertToFloat</a>(<var>x</var>, 16).</p>"
                },
                {
                  "case": "\"int64\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttoint\" id=\"ref-for-converttoint\">ConvertToInt</a>(<var>x</var>, 64, \"signed\").</p>"
                },
                {
                  "case": "\"uint64\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttoint\" id=\"ref-for-converttoint①\">ConvertToInt</a>(<var>x</var>, 64, \"unsigned\").</p>"
                },
                {
                  "case": "\"int32\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttoint\" id=\"ref-for-converttoint②\">ConvertToInt</a>(<var>x</var>, 32, \"signed\").</p>"
                },
                {
                  "case": "\"uint32\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttoint\" id=\"ref-for-converttoint③\">ConvertToInt</a>(<var>x</var>, 32, \"signed\").</p>"
                },
                {
                  "case": "\"int8\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttoint\" id=\"ref-for-converttoint④\">ConvertToInt</a>(<var>x</var>, 8, \"signed\").</p>"
                },
                {
                  "case": "\"uint8\"",
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webmachinelearning.github.io/webnn/#converttoint\" id=\"ref-for-converttoint⑤\">ConvertToInt</a>(<var>x</var>, 8, \"unsigned\").</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "cast",
      "href": "https://webmachinelearning.github.io/webnn/#cast",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"converttofloat\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ConvertToFloat</dfn>(<var>x</var>, <var>bitLength</var>) steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>x</var> is NaN, then return NaN.</p>"
        },
        {
          "html": "Switch on <var>bitLength</var>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "32",
                  "html": "",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>upperBound</var> be 2<sup>128</sup>.</p>"
                    },
                    {
                      "html": "<p>Let <var>lowerBound</var> be -2<sup>128</sup>.</p>"
                    },
                    {
                      "html": "<p>Let <var>S</var> be the set of <a data-link-type=\"biblio\" href=\"https://webmachinelearning.github.io/webnn/#biblio-ieee-754-2019\" title=\"IEEE Standard for Floating-Point Arithmetic\">[IEEE-754-2019]</a> binary32 floating point values except -0, but with the special values <var>upperBound</var> and <var>lowerBound</var> added.</p>"
                    }
                  ]
                },
                {
                  "case": "16",
                  "html": "",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>upperBound</var> be 2<sup>16</sup>.</p>"
                    },
                    {
                      "html": "<p>Let <var>lowerBound</var> be -2<sup>16</sup>.</p>"
                    },
                    {
                      "html": "<p>Let <var>S</var> be the set of <a data-link-type=\"biblio\" href=\"https://webmachinelearning.github.io/webnn/#biblio-ieee-754-2019\" title=\"IEEE Standard for Floating-Point Arithmetic\">[IEEE-754-2019]</a> binary16 floating point values except -0, but with the special values <var>upperBound</var> and <var>lowerBound</var> added.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>y</var> be the number in <var>S</var> that is closest to <var>x</var>, selecting the number with an even significand if there are two <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type\">equally close values</a>. The two special values <var>lowerBound</var> and <var>upperBound</var> are considered to have even significands for this purpose.</p>"
        },
        {
          "html": "<p>If <var>y</var> is <var>upperBound</var>, then return +Infinity.</p>"
        },
        {
          "html": "<p>If <var>y</var> is <var>lowerBound</var>, then return -Infinity.</p>"
        },
        {
          "html": "<p>If <var>y</var> is +0 and <var>x</var> is negative, return -0.</p>"
        },
        {
          "html": "<p>Return <var>y</var>.</p>"
        }
      ]
    },
    {
      "name": "cast",
      "href": "https://webmachinelearning.github.io/webnn/#cast",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"converttoint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ConvertToInt</dfn>(<var>x</var>, <var>bitLength</var>, <var>signedness</var>) steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>signedness</var> is \"unsigned\", then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>lowerBound</var> be 0.</p>"
            },
            {
              "html": "<p>Let <var>upperBound</var> be 2<sup><var>bitLength</var></sup> - 1.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>lowerBound</var> be -(2<sup><var>bitLength</var> - 1</sup>).</p>"
            },
            {
              "html": "<p>Let <var>upperBound</var> be 2<sup><var>bitLength</var> - 1</sup> - 1.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>x</var> is -0, then set <var>x</var> to +0.</p>"
        },
        {
          "html": "<p>If <var>x</var> is NaN, then return +0.</p>"
        },
        {
          "html": "<p>Set <var>x</var> to min(max(<var>x</var>, <var>lowerBound</var>), <var>upperBound</var>).</p>"
        },
        {
          "html": "<p>Round <var>x</var> to the nearest integer, choosing the even integer if it lies halfway between two, and choosing +0 rather than -0.</p>"
        },
        {
          "html": "<p>Return <var>x</var>.</p>"
        }
      ]
    }
  ]
}