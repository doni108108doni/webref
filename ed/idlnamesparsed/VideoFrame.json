{
  "name": "VideoFrame",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "WebCodecs",
      "url": "https://www.w3.org/TR/webcodecs/"
    },
    "fragment": "[Exposed=(Window,DedicatedWorker), Serializable, Transferable]\ninterface VideoFrame {\n  constructor(CanvasImageSource image, optional VideoFrameInit init = {});\n  constructor(AllowSharedBufferSource data, VideoFrameBufferInit init);\n\n  readonly attribute VideoPixelFormat? format;\n  readonly attribute unsigned long codedWidth;\n  readonly attribute unsigned long codedHeight;\n  readonly attribute DOMRectReadOnly? codedRect;\n  readonly attribute DOMRectReadOnly? visibleRect;\n  readonly attribute double rotation;\n  readonly attribute boolean flip;\n  readonly attribute unsigned long displayWidth;\n  readonly attribute unsigned long displayHeight;\n  readonly attribute unsigned long long? duration;  // microseconds\n  readonly attribute long long timestamp;           // microseconds\n  readonly attribute VideoColorSpace colorSpace;\n\n  VideoFrameMetadata metadata();\n\n  unsigned long allocationSize(\n      optional VideoFrameCopyToOptions options = {});\n  Promise<sequence<PlaneLayout>> copyTo(\n      AllowSharedBufferSource destination,\n      optional VideoFrameCopyToOptions options = {});\n  VideoFrame clone();\n  undefined close();\n};",
    "href": "https://w3c.github.io/webcodecs/#videoframe"
  },
  "extended": [],
  "inheritance": null,
  "includes": []
}