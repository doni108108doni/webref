{
  "spec": {
    "title": "Source map format specification",
    "url": "https://tc39.es/ecma426/"
  },
  "links": {
    "rawlinks": {
      "https://docs.google.com/document/d/1xi12LrcqjqIHTtZzrzZKmQ3lbTv9mKrN076UB-j3UZQ/edit?hl=en_US": {},
      "https://en.wikipedia.org/wiki/Variable-length_quantity": {},
      "https://encoding.spec.whatwg.org/": {},
      "https://fetch.spec.whatwg.org/": {},
      "https://github.com/tc39/ecma426": {},
      "https://infra.spec.whatwg.org/": {
        "anchors": [
          "algorithm-control-flow"
        ]
      },
      "https://tc39.es/ecma262/": {},
      "https://tc39.es/ecma404/": {},
      "https://tc39.es/ecma426/": {},
      "https://url.spec.whatwg.org/": {},
      "https://web.archive.org/web/20120814122523/http://blog.getfirebug.com/2009/08/11/give-your-eval-a-name-with-sourceurl/": {},
      "https://webidl.spec.whatwg.org/": {},
      "https://www.ietf.org/rfc/rfc4648.txt": {},
      "https://www.w3.org/TR/wasm-core-2/": {
        "anchors": [
          "names%E2%91%A2"
        ]
      }
    },
    "autolinks": {
      "https://encoding.spec.whatwg.org/": {
        "anchors": [
          "utf-8-decode-without-bom-or-fail"
        ]
      },
      "https://fetch.spec.whatwg.org/": {
        "anchors": [
          "concept-request",
          "concept-request-url",
          "concept-fetch",
          "process-response-end-of-body",
          "concept-response",
          "http-scheme",
          "http-newline-byte"
        ]
      },
      "https://infra.spec.whatwg.org/": {
        "anchors": [
          "struct",
          "string",
          "list",
          "boolean",
          "parse-a-json-string-to-an-infra-value",
          "ordered-map",
          "map-exists",
          "list-iterate",
          "list-append",
          "strictly-split",
          "list-size",
          "string-position-variable",
          "ascii-string",
          "code-unit",
          "byte",
          "byte-value",
          "code-unit-substring",
          "string-concatenate",
          "iteration-while",
          "collect-a-sequence-of-code-points",
          "iteration-break",
          "code-point",
          "code-point-substring",
          "byte-sequence",
          "byte-sequence-starts-with",
          "byte-sequence-length",
          "parse-json-bytes-to-a-javascript-value"
        ]
      },
      "https://tc39.es/ecma262/": {
        "anchors": [
          "sec-ecmascript-language-lexical-grammar",
          "prod-IdentifierName",
          "prod-PrivateIdentifier",
          "prod-Punctuator",
          "prod-DivPunctuator",
          "prod-RightBracePunctuator",
          "prod-NumericLiteral",
          "prod-RegularExpressionLiteral",
          "prod-Comment",
          "prod-HashbangComment",
          "prod-StringLiteral",
          "prod-Template",
          "prod-TemplateSubstitutionTail",
          "prod-WhiteSpace",
          "prod-LineTerminator",
          "sec-syntactic-grammar",
          "prod-BindingIdentifier",
          "prod-LexicalDeclaration",
          "prod-VariableStatement",
          "sec-parameter-lists",
          "prod-FunctionDeclaration",
          "prod-FunctionExpression",
          "prod-AsyncFunctionDeclaration",
          "prod-AsyncFunctionExpression",
          "prod-GeneratorDeclaration",
          "prod-GeneratorExpression",
          "prod-AsyncGeneratorDeclaration",
          "prod-AsyncGeneratorExpression",
          "prod-FormalParameters",
          "prod-ArrowFunction",
          "prod-AsyncArrowFunction",
          "prod-ArrowParameters",
          "prod-AsyncArrowBindingIdentifier",
          "prod-ArrowFormalParameters",
          "prod-ClassElementName",
          "prod-MethodDefinition",
          "prod-IdentifierReference",
          "prod-Expression",
          "sec-lexical-and-regexp-grammars",
          "prod-SingleLineComment",
          "prod-MultiLineComment",
          "table-line-terminator-code-points",
          "sec-white-space",
          "sec-regexpbuiltinexec"
        ]
      },
      "https://url.spec.whatwg.org/": {
        "anchors": [
          "concept-url",
          "concept-url-parser",
          "concept-url-scheme"
        ]
      },
      "https://webassembly.github.io/spec/core/appendix/embedding.html": {
        "anchors": [
          "embed-module-decode"
        ]
      },
      "https://webassembly.github.io/spec/core/binary/modules.html": {
        "anchors": [
          "binary-customsec"
        ]
      },
      "https://webidl.spec.whatwg.org/": {
        "anchors": [
          "a-new-promise",
          "reject",
          "exceptiondef-typeerror",
          "resolve"
        ]
      }
    }
  }
}